plot.title=element_text(size=12),
aspect.ratio = 1) +
geom_point(data = dflt, aes(x = dflt$Var1, y= dflt$Var2,colour = dflt$sig_level),
size = 12,
alpha = 0.5,
stat = "identity",
#position='stack',
show.legend = TRUE
)+
scale_color_manual(name = "p-value coding",
values = c("white", "green", "yellow", "red"   , "pink", "black"),
labels = c(">0.05", "<0.05", "<0.01" , "<0.001", "<0.0001", "not existent"))+
geom_text(data = dflt, aes(label= ifelse(value<0.05, sprintf("%0.3f", round(value,digits =3)),"")),
hjust=0.5, vjust=0.5, size = 3,
stat = "identity")+
geom_abline(slope = 1, intercept = 0) +
scale_y_continuous(breaks=seq(1, length(names), 1), labels = names, minor_breaks = NULL) +
scale_x_continuous(breaks=seq(1, length(names), 1), labels = names, minor_breaks = NULL)
# axis(1, at=1:length(names), labels = letters[1:length(names)])
# axis(1, at=1:length(names), labels = letters[1:length(names)])
#gg<-gg + scale_x_continuous(breaks=seq(1, length(names), 1), labels = names)
# axis(1, at=1:length(names), labels = letters[1:length(names)])
#gg<-gg + scale_x_continuous(breaks=seq(1, length(names), 1), labels = names)
#gg +
length(names)
runApp('app')
runApp('app')
runApp('app')
runApp('app')
library(shiny)
library(data.table)
D<-fread('./preprocessing/export_table_coh.csv', header = TRUE, sep = ',', check.names = FALSE)
library(tidyverse)
D2 <- D %>% select(-contains("frontal_links_A>"))
D2 <- D2 %>% select(-contains("frontopolar_A>"))
D2 <- D %>% select(-contains("frontal_rechts_A>"))
D2 <- D2 %>% select(-contains("frontal_links_A>"))
D2 <- D2 %>% select(-contains("frontopolar_A>"))
D2 <- D2 %>% select(-contains("temporal_links_A>"))
D2 <- D2 %>% select(-contains("temporal_rechts_A>"))
D2 <- D2 %>% select(-contains("frontocentral_l_A>"))
D2 <- D2 %>% select(-contains("frontocentral_r_A>"))
D2 <- D2 %>% select(-contains("parietal_links_A>"))
D2 <- D2 %>% select(-contains("parietal_rechts_A>"))
D2 <- D2 %>% select(-contains("parietooccipital_l_A>"))
D2 <- D2 %>% select(-contains("parietooccipital_r_A>"))
write.csv(D2,"./preprocessing/test_coh.csv", row.names = FALSE)
runApp('app')
D3 <- D2 %>% select(-contains("0."))
D3 <- D2 %>% select(-contains("0.1"))
D3 <- D2 %>% select(-contains("0."))
library(tidyverse)
D3 <- D2 %>% select(-contains("0."))
D3 <- D2 %>% select(-contains("parietooccipital_r_A>"))
library(tidyverse)
D2<-fread('./preprocessing/test_coh.csv', header = TRUE, sep = ',', check.names = FALSE)
library(data.table)
D2<-fread('./preprocessing/test_coh.csv', header = TRUE, sep = ',', check.names = FALSE)
D3 <- D2 %>% select(-contains("1."))
D3 <- D3 %>% select(-contains("2."))
D3 <- D3 %>% select(-contains("3."))
D3 <- D3 %>% select(-contains("4."))
D3 <- D3 %>% select(-contains("5."))
D3 <- D3 %>% select(-contains("6."))
D3 <- D3 %>% select(-contains("7."))
D3 <- D3 %>% select(-contains("8."))
D3 <- D3 %>% select(-contains("9."))
D3 <- D3 %>% select(-contains("8832"))
D3 <- D3 %>% select(-contains("9344"))
D3 <- D3 %>% select(-contains("12928"))
D3 <- D3 %>% select(-contains("13440"))
D3 <- D3 %>% select(-contains("14464"))
D3 <- D3 %>% select(-contains("29824"))
D3 <- D3 %>% select(-contains("30336"))
library(shiny)
runApp('app')
source('build_minimal_coh_csv_file.R')
source('G:/Programming/dataVIS/build_minimal_coh_csv_file.R')
library(data.table)
library(tidyverse)
D3<-fread('./preprocessing/export_table_coh.csv', header = TRUE, sep = ',', check.names = FALSE)
D3 <- D3 %>% select(-contains("parietooccipital_central_A>"))
D3 <- D3 %>% select(-contains(">parietooccipital_central_A"))
D3 <- D3 %>% select(-contains("frontal_links_A>"))
D3 <- D3 %>% select(-contains(">frontal_links_A"))
D3 <- D3 %>% select(-contains("frontal_rechts_A>"))
D3 <- D3 %>% select(-contains(">frontal_rechts_A"))
D3 <- D3 %>% select(-contains("frontocentral_links_A>"))
D3 <- D3 %>% select(-contains(">frontocentral_links_A"))
D3 <- D3 %>% select(-contains("frontocentral_rechts_A>"))
D3 <- D3 %>% select(-contains(">frontocentral_rechts_A"))
D3 <- D3 %>% select(-contains("temporal_links_A>"))
D3 <- D3 %>% select(-contains(">temporal_links_A"))
D3 <- D3 %>% select(-contains("temporal_rechts_A>"))
D3 <- D3 %>% select(-contains(">temporal_rechts_A"))
D3 <- D3 %>% select(-contains("parietal_links_A>"))
D3 <- D3 %>% select(-contains(">parietal_links_A"))
D3 <- D3 %>% select(-contains("parietal_rechts_A>"))
D3 <- D3 %>% select(-contains(">parietal_rechts_A"))
D3 <- D3 %>% select(-contains("parietooccipital_l_A>"))
D3 <- D3 %>% select(-contains(">parietooccipital_l_A"))
D3 <- D2 %>% select(-contains("parietooccipital_r_A>"))
D3 <- D2 %>% select(-contains(">parietooccipital_r_A"))
D3 <- D3 %>% select(-contains("parietooccipital_links_A>"))
D3 <- D3 %>% select(-contains(">parietooccipital_links_A"))
D3 <- D2 %>% select(-contains("parietooccipital_rechts_A>"))
D3 <- D3 %>% select(-contains("parietooccipital_rechts_A>"))
D3 <- D3 %>% select(-contains(">parietooccipital_rechts_A"))
D3 <- D3 %>% select(-contains("1."))
D3 <- D3 %>% select(-contains("2."))
D3 <- D3 %>% select(-contains("3."))
D3 <- D3 %>% select(-contains("4."))
D3 <- D3 %>% select(-contains("5."))
D3 <- D3 %>% select(-contains("6."))
D3 <- D3 %>% select(-contains("7."))
D3 <- D3 %>% select(-contains("8."))
D3 <- D3 %>% select(-contains("9."))
D3 <- D3 %>% select(-contains("8832"))
D3 <- D3 %>% select(-contains("9344"))
D3 <- D3 %>% select(-contains("12928"))
D3 <- D3 %>% select(-contains("13440"))
D3 <- D3 %>% select(-contains("14464"))
D3 <- D3 %>% select(-contains("29824"))
D3 <- D3 %>% select(-contains("30336"))
write.csv(D3,"./preprocessing/test_coh.csv", row.names = FALSE)
source('G:/Programming/dataVIS/build_minimal_coh_csv_file.R')
library(data.table)
library(tidyverse)
D3<-fread('./preprocessing/export_table_coh.csv', header = TRUE, sep = ',', check.names = FALSE)
D3 <- D3 %>% select(-contains("parietooccipital_central_A>"))
D3 <- D3 %>% select(-contains(">parietooccipital_central_A"))
D3 <- D3 %>% select(-contains("frontal_links_A>"))
D3 <- D3 %>% select(-contains(">frontal_links_A"))
D3 <- D3 %>% select(-contains("frontal_rechts_A>"))
D3 <- D3 %>% select(-contains(">frontal_rechts_A"))
D3 <- D3 %>% select(-contains("frontocentral_links_A>"))
D3 <- D3 %>% select(-contains(">frontocentral_links_A"))
D3 <- D3 %>% select(-contains("frontocentral_rechts_A>"))
D3 <- D3 %>% select(-contains(">frontocentral_rechts_A"))
D3 <- D3 %>% select(-contains("temporal_links_A>"))
D3 <- D3 %>% select(-contains(">temporal_links_A"))
D3 <- D3 %>% select(-contains("temporal_rechts_A>"))
D3 <- D3 %>% select(-contains(">temporal_rechts_A"))
D3 <- D3 %>% select(-contains("parietal_links_A>"))
D3 <- D3 %>% select(-contains(">parietal_links_A"))
D3 <- D3 %>% select(-contains("parietal_rechts_A>"))
D3 <- D3 %>% select(-contains(">parietal_rechts_A"))
D3 <- D3 %>% select(-contains("parietooccipital_links_A>"))
D3 <- D3 %>% select(-contains(">parietooccipital_links_A"))
D3 <- D3 %>% select(-contains("parietooccipital_rechts_A>"))
D3 <- D3 %>% select(-contains(">parietooccipital_rechts_A"))
D3 <- D3 %>% select(-contains("1."))
D3 <- D3 %>% select(-contains("2."))
D3 <- D3 %>% select(-contains("3."))
D3 <- D3 %>% select(-contains("4."))
D3 <- D3 %>% select(-contains("5."))
D3 <- D3 %>% select(-contains("6."))
D3 <- D3 %>% select(-contains("7."))
D3 <- D3 %>% select(-contains("8."))
D3 <- D3 %>% select(-contains("9."))
D3 <- D3 %>% select(-contains("10."))
D3 <- D3 %>% select(-contains("20."))
D3 <- D3 %>% select(-contains("30."))
D3 <- D3 %>% select(-contains("40."))
D3 <- D3 %>% select(-contains("8832"))
D3 <- D3 %>% select(-contains("9344"))
D3 <- D3 %>% select(-contains("12928"))
D3 <- D3 %>% select(-contains("13440"))
D3 <- D3 %>% select(-contains("14464"))
D3 <- D3 %>% select(-contains("29824"))
D3 <- D3 %>% select(-contains("30336"))
write.csv(D3,"./preprocessing/test_coh.csv", row.names = FALSE)
write.csv(D3,"./preprocessing/test_coh.csv", sep = "|" row.names = FALSE)
write.csv(D3,"./preprocessing/test_coh.csv", sep = "|", row.names = FALSE)
write.csv(D3,"./preprocessing/test_coh.csv", sep = ";", row.names = FALSE)
runTests("dataVIS", filter = "testthat")
setwd('..')
runTests("dataVIS", filter = "testthat")
library(shiny)
runTests("dataVIS", filter = "testthat")
runApp('app')
runApp('dataVIS/app')
runApp('dataVIS/app')
runApp('dataVIS/app')
runApp('dataVIS/app')
runApp('dataVIS/app')
library(shiny)
runApp('dataVIS/app')
runApp('dataVIS/app')
runApp('dataVIS/app')
library(shiny)
runApp('dataVIS/app')
runApp('dataVIS/app')
library(shiny)
runApp('dataVIS/app')
runApp('app')
runApp('app')
runApp('app')
library(shiny)
runApp('app')
library(shiny)
runApp('app')
runApp('app')
library(shiny)
runApp('app')
runApp('app')
library(shiny)
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
cat(file = stderr(),file.path("../data",method,"uregion_list.Rda") )
cat(file = stderr(),file.path("../data","Coherence_01","uregion_list.Rda") )
setwd('app')
x=file.path("../data","Coherence_01","uregion_list.Rda")
x
u <-readRDS(x)
setwd('..')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
library(shiny)
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runTests("app,filter=testthat")
setwd('app')
runApp('app')
runApp(".")
runTests("app",filter="testthat")
setwd('..')
runTests("app",filter="testthat")
coh_csv_filename = file.path(".","app", "tests", "data", "test_coh.csv")
coh_csv_filename
library(shiny)
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runTests("app",filter="testthat")
runTests("app",filter="testthat")
runTests("app",filter="testthat")
runTests("app",filter="testthat")
runTests("app",filter="testthat")
runTests("app",filter="testthat")
runTests("app",filter="testthat")
runTests("app",filter="testthat")
p = file.path(".","app","tests","testthat","data")
f1 = file.path(p,"test_beh.csv")
TB = fread(f1,)
runTests("app",filter="testthat")
runTests("app",filter="testthat")
runTests("app",filter="testthat")
library(shiny)
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runTests("app", filter = "testthat")
runTests("app", filter = "testthat")
s1 = "lsadfjsdljf_to"
mystring = "lsadfjsdljf_to"
str_sub(mystring,-3,-1)=="_to"
str_sub(mystring,-5,-1)=="_from"
mystring = "lsadfjsdljf_from"
str_sub(mystring,-5,-1)=="_from"
str_sub(mystring,1,-6)
x = 1
y = 2
z = c("1", "2")
l = list("mean"=x, "std" = y, "var"=z)
l
l$mean
l$std
l$var
class(l$var)
class(l$mean)
x = matrix(runif(100),nrow = 10 )
l = list("mean"=x, "std" = y, "var"=z)
class(l$mean)
library(data.table)
library(tidyverse)
D3<-fread('./preprocessing/export_table_coh_old_mag.csv', header = TRUE, sep = ',', check.names = FALSE)
colnames(D3)
library(tidyverse)
D3<-fread('./preprocessing/export_table_coh_old_mag.csv', header = TRUE, sep = ',', check.names = FALSE)
D3 <- D3 %>% select(-contains("parietooccipital_central_from>"))
D3 <- D3 %>% select(-contains(">parietooccipital_central_from"))
D3 <- D3 %>% select(-contains("parietooccipital_cen>"))
D3 <- D3 %>% select(-contains(">parietooccipital_cen"))
D3 <- D3 %>% select(-contains("frontal_links_from>"))
D3 <- D3 %>% select(-contains(">frontal_links_from"))
D3 <- D3 %>% select(-contains("frontal_rechts_from>"))
D3 <- D3 %>% select(-contains(">frontal_rechts_from"))
D3 <- D3 %>% select(-contains("frontocentral_l_from>"))
D3 <- D3 %>% select(-contains(">frontocentral_l_from"))
D3 <- D3 %>% select(-contains("frontocentral_r_from>"))
D3 <- D3 %>% select(-contains(">frontocentral_r_from"))
D3 <- D3 %>% select(-contains("temporal_links_from>"))
D3 <- D3 %>% select(-contains(">temporal_links_from"))
D3 <- D3 %>% select(-contains("temporal_rechts_from>"))
D3 <- D3 %>% select(-contains(">temporal_rechts_from"))
D3 <- D3 %>% select(-contains("parietal_links_from>"))
D3 <- D3 %>% select(-contains(">parietal_links_from"))
D3 <- D3 %>% select(-contains("parietal_rechts_from>"))
D3 <- D3 %>% select(-contains(">parietal_rechts_from"))
D3 <- D3 %>% select(-contains("parietooccipital_l_from>"))
D3 <- D3 %>% select(-contains(">parietooccipital_l_from"))
D3 <- D3 %>% select(-contains("parietooccipital_r_from>"))
D3 <- D3 %>% select(-contains(">parietooccipital_r_from"))
D3 <- D3 %>% select(-contains("1."))
D3 <- D3 %>% select(-contains("2."))
D3 <- D3 %>% select(-contains("3."))
D3 <- D3 %>% select(-contains("4."))
D3 <- D3 %>% select(-contains("5."))
D3 <- D3 %>% select(-contains("6."))
D3 <- D3 %>% select(-contains("7."))
D3 <- D3 %>% select(-contains("8."))
D3 <- D3 %>% select(-contains("9."))
D3 <- D3 %>% select(-contains("10."))
D3 <- D3 %>% select(-contains("20."))
D3 <- D3 %>% select(-contains("30."))
D3 <- D3 %>% select(-contains("40."))
D3 <- D3 %>% select(-contains("8832"))
D3 <- D3 %>% select(-contains("9344"))
D3 <- D3 %>% select(-contains("12928"))
D3 <- D3 %>% select(-contains("13440"))
D3 <- D3 %>% select(-contains("13952"))
D3 <- D3 %>% select(-contains("14464"))
D3 <- D3 %>% select(-contains("29824"))
D3 <- D3 %>% select(-contains("30336"))
colnames(D3)
D3 <- D3 %>% select(-contains("parietooccipital_central_from>"))
D3 <- D3 %>% select(-contains(">parietooccipital_central_from"))
D3 <- D3 %>% select(-contains("parietooccipital_cen>"))
D3 <- D3 %>% select(-contains(">parietooccipital_cen"))
D3 <- D3 %>% select(-contains("frontal_left_from>"))
D3 <- D3 %>% select(-contains(">frontal_left_from"))
D3 <- D3 %>% select(-contains("frontal_right_from>"))
D3 <- D3 %>% select(-contains(">frontal_right_from"))
D3 <- D3 %>% select(-contains("frontocentral_l_from>"))
D3 <- D3 %>% select(-contains(">frontocentral_l_from"))
D3 <- D3 %>% select(-contains("frontocentral_r_from>"))
D3 <- D3 %>% select(-contains(">frontocentral_r_from"))
D3 <- D3 %>% select(-contains("temporal_links_from>"))
D3 <- D3 %>% select(-contains(">temporal_links_from"))
D3 <- D3 %>% select(-contains("temporal_rechts_from>"))
D3 <- D3 %>% select(-contains(">temporal_rechts_from"))
D3 <- D3 %>% select(-contains("parietal_left_from>"))
D3 <- D3 %>% select(-contains(">parietal_left_from"))
D3 <- D3 %>% select(-contains("parietal_right_from>"))
D3 <- D3 %>% select(-contains(">parietal_right_from"))
D3 <- D3 %>% select(-contains("parietooccipital_l_from>"))
D3 <- D3 %>% select(-contains(">parietooccipital_l_from"))
D3 <- D3 %>% select(-contains("parietooccipital_r_from>"))
D3 <- D3 %>% select(-contains(">parietooccipital_r_from"))
D3 <- D3 %>% select(-contains("parieto_occ_l_from>"))
D3 <- D3 %>% select(-contains(">parieto_occ_l_from"))
D3 <- D3 %>% select(-contains("parieto_occ_r_from>"))
D3 <- D3 %>% select(-contains(">parieto_occ_r_from"))
D3 <- D3 %>% select(-contains("1."))
D3 <- D3 %>% select(-contains("2."))
D3 <- D3 %>% select(-contains("3."))
D3 <- D3 %>% select(-contains("4."))
D3 <- D3 %>% select(-contains("5."))
D3 <- D3 %>% select(-contains("6."))
D3 <- D3 %>% select(-contains("7."))
D3 <- D3 %>% select(-contains("8."))
D3 <- D3 %>% select(-contains("9."))
D3 <- D3 %>% select(-contains("10."))
D3 <- D3 %>% select(-contains("20."))
D3 <- D3 %>% select(-contains("30."))
D3 <- D3 %>% select(-contains("40."))
D3 <- D3 %>% select(-contains("8832"))
D3 <- D3 %>% select(-contains("9344"))
D3 <- D3 %>% select(-contains("12928"))
D3 <- D3 %>% select(-contains("13440"))
D3 <- D3 %>% select(-contains("13952"))
D3 <- D3 %>% select(-contains("14464"))
D3 <- D3 %>% select(-contains("29824"))
D3 <- D3 %>% select(-contains("30336"))
colnames(D3)
library(data.table)
library(reshape2)
D <- read.csv("./data/Behavioral/Tipp10_Auswertung3.csv", header = TRUE, sep = ";", check.names = FALSE)
# my_data %>% select(ends_with("Width"))
#
# # Select columns whose names contains "etal"
# my_data %>% select(contains("etal"))
#
# # Select columns whose name maches a regular expression
# my_data %>% select(matches(".t."))
#
# # selects variables provided in a character vector.
# my_data %>% select(one_of(c("Sepal.Length", "Petal.Length")))
measurement_seperator = '__'
get_columnnames_by_pattern<- function(df, pattern){
cn = colnames(df)
ret = grep(pattern,cn, value = TRUE)
return(ret)
}
outcome_var_pattern = "Tippfehler"
outcome_var_pattern = "Anzahl_Richtige"
df <- melt(data = D, id.vars = c("ID","ToInclude","Lektion"),
measure.vars = get_columnnames_by_pattern(D, outcome_var_pattern),
variable_name = "var_names"
)
# exlude those not to include
df <- subset(df, ToInclude==1)
df <- cbind(df, colsplit(df$var_names, "__", names= c(outcome_var_pattern, "Test_number")))
newModel <- lm(Test_number ~ value, data = df, na.action = na.exclude)
summary(newModel)
D <- read.csv("./data/Behavioral/Tipp10_Auswertung.csv", header = TRUE, sep = ";", check.names = FALSE)
View(D)
colnames(D)
colnames(D)[1]
D <- read.csv("./data/Behavioral/Tipp10_Auswertung3.csv", header = TRUE, sep = ";", check.names = FALSE)
# my_data %>% select(ends_with("Width"))
#
# # Select columns whose names contains "etal"
# my_data %>% select(contains("etal"))
#
# # Select columns whose name maches a regular expression
# my_data %>% select(matches(".t."))
#
# # selects variables provided in a character vector.
# my_data %>% select(one_of(c("Sepal.Length", "Petal.Length")))
measurement_seperator = '__'
get_columnnames_by_pattern<- function(df, pattern){
cn = colnames(df)
ret = grep(pattern,cn, value = TRUE)
return(ret)
}
outcome_var_pattern = "Tippfehler"
outcome_var_pattern = "Anzahl_Richtige"
df <- melt(data = D, id.vars = c("ID","ToInclude","Lektion"),
measure.vars = get_columnnames_by_pattern(D, outcome_var_pattern),
variable_name = "var_names"
)
# exlude those not to include
df <- subset(df, ToInclude==1)
df <- cbind(df, colsplit(df$var_names, "__", names= c(outcome_var_pattern, "Test_number")))
View(df)
outcome_var_pattern = "Anzahl_Richtige"
df <- melt(data = D, id.vars = c("ID","ToInclude","Lektion"),
measure.vars = get_columnnames_by_pattern(D, outcome_var_pattern),
variable_name = "var_names"
)
# exlude those not to include
df <- subset(df, ToInclude==1)
df <- cbind(df, colsplit(df$var_names, "__", names= c(outcome_var_pattern, "Test_number")))
outcome_var_pattern = "Tippfehler"
df <- melt(data = D, id.vars = c("ID","ToInclude","Lektion"),
measure.vars = get_columnnames_by_pattern(D, outcome_var_pattern),
variable_name = "var_names"
)
# exlude those not to include
df <- subset(df, ToInclude==1)
df <- cbind(df, colsplit(df$var_names, "__", names= c(outcome_var_pattern, "Test_number")))
View(myTabPlots)
View(df)
View(df)
outcome_var_pattern = "Anzahl_Richtige"
df <- melt(data = D, id.vars = c("ID","ToInclude","Lektion"),
measure.vars = get_columnnames_by_pattern(D, outcome_var_pattern),
variable_name = "var_names"
)
# exlude those not to include
df <- subset(df, ToInclude==1)
df <- cbind(df, colsplit(df$var_names, "__", names= c(outcome_var_pattern, "Test_number")))
colsplit(df$variable, "__", names = c("Anzahl_Richtige", "Test_number"))
df <- melt(data = D, id.vars = c("ID","ToInclude","Lektion"),
measure.vars = get_columnnames_by_pattern(D, outcome_var_pattern)
)
df <- cbind(df, colsplit(df$variable, "__", names= c(outcome_var_pattern, "Test_number")))
# exlude those not to include
df <- subset(df, ToInclude==1)
df <- cbind(df, colsplit(df$variable, "__", names= c(outcome_var_pattern, "Test_number")))
df <- melt(data = D, id.vars = c("ID","ToInclude","Lektion"),
measure.vars = get_columnnames_by_pattern(D, outcome_var_pattern)
)
# exlude those not to include
df <- subset(df, ToInclude==1)
df <- cbind(df, colsplit(df$variable, "__", names= c(outcome_var_pattern, "Test_number")))
newModel <- lm(Test_number ~ value, data = df, na.action = na.exclude)
summary(newModel)
source('G:/Programming/dataVis/data/Behavioral/behavioral.R', encoding = 'UTF-8')
