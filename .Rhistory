scale_x_continuous(breaks=seq(1, length(names), 1), labels = names, minor_breaks = NULL)
ggplot(df, aes(x = Var1, y = Var2)) +
#geom_raster(aes(fill=value)) +
#scale_fill_gradient(low="grey90", high="red") +
labs(x="",
y="",
title="Significance Matrix",
caption="handmade with ggplot2") +
theme_bw() + theme(axis.text.x=element_text(size=9, angle=45, vjust=0.9, hjust=1.0),
axis.text.y=element_text(size=9),
plot.title=element_text(size=12)) +
geom_point(data = dflt, aes(x = dflt$Var1, y= dflt$Var2,colour = dflt$sig_level),
size = 12,
alpha = 0.5,
stat = "identity",
#position='stack',
show.legend = TRUE
)+
scale_color_manual(name = "value",
values = c("white", "green", "yellow", "red"   , "pink", "black"),
labels = c(">0.05", "<0.05", "<0.01" , "<0.001", "<0.0001", "not existent"))+
geom_text(aes(label= ifelse(value<0.05, sprintf("%0.3f", round(value,digits =3)),"")),
hjust=0.5, vjust=0.5, size = 3,
stat = "identity")+
geom_abline(slope = 1, intercept = 0) +
scale_y_continuous(breaks=seq(1, length(names), 1), labels = names, minor_breaks = NULL) +
scale_x_continuous(breaks=seq(1, length(names), 1), labels = names, minor_breaks = NULL)
ggplot(df, aes(x = Var1, y = Var2)) +
#geom_raster(aes(fill=value)) +
#scale_fill_gradient(low="grey90", high="red") +
labs(x="",
y="",
title="Significance Matrix",
caption="handmade with ggplot2") +
theme_bw() + theme(axis.text.x=element_text(size=9, angle=45, vjust=0.9, hjust=1.0),
axis.text.y=element_text(size=9),
plot.title=element_text(size=12)) +
geom_point(data = dflt, aes(x = dflt$Var1, y= dflt$Var2,colour = dflt$sig_level),
size = 12,
alpha = 0.5,
stat = "identity",
#position='stack',
show.legend = TRUE
)+
scale_color_manual(name = "valuey",
values = c("white", "green", "yellow", "red"   , "pink", "black"),
labels = c(">0.05", "<0.05", "<0.01" , "<0.001", "<0.0001", "not existent"))+
geom_text(aes(label= ifelse(value<0.05, sprintf("%0.3f", round(value,digits =3)),"")),
hjust=0.5, vjust=0.5, size = 3,
stat = "identity")+
geom_abline(slope = 1, intercept = 0) +
scale_y_continuous(breaks=seq(1, length(names), 1), labels = names, minor_breaks = NULL) +
scale_x_continuous(breaks=seq(1, length(names), 1), labels = names, minor_breaks = NULL)
ggplot(df, aes(x = Var1, y = Var2)) +
#geom_raster(aes(fill=value)) +
#scale_fill_gradient(low="grey90", high="red") +
labs(x="",
y="",
title="Significance Matrix",
caption="handmade with ggplot2") +
theme_bw() + theme(axis.text.x=element_text(size=9, angle=45, vjust=0.9, hjust=1.0),
axis.text.y=element_text(size=9),
plot.title=element_text(size=12)) +
geom_point(data = dflt, aes(x = dflt$Var1, y= dflt$Var2,colour = dflt$sig_level),
size = 12,
alpha = 0.5,
stat = "identity",
#position='stack',
show.legend = TRUE
)+
scale_color_manual(name = "p-value coding",
values = c("white", "green", "yellow", "red"   , "pink", "black"),
labels = c(">0.05", "<0.05", "<0.01" , "<0.001", "<0.0001", "not existent"))+
geom_text(aes(label= ifelse(value<0.05, sprintf("%0.3f", round(value,digits =3)),"")),
hjust=0.5, vjust=0.5, size = 3,
stat = "identity")+
geom_abline(slope = 1, intercept = 0) +
scale_y_continuous(breaks=seq(1, length(names), 1), labels = names, minor_breaks = NULL) +
scale_x_continuous(breaks=seq(1, length(names), 1), labels = names, minor_breaks = NULL)
ggplot(df, aes(x = Var1, y = Var2)) +
#geom_raster(aes(fill=value)) +
#scale_fill_gradient(low="grey90", high="red") +
labs(x="",
y="",
title="Significance Matrix",
caption="handmade with ggplot2") +
theme_bw() + theme(axis.text.x=element_text(size=9, angle=45, vjust=0.9, hjust=1.0),
axis.text.y=element_text(size=9),
plot.title=element_text(size=12)) +
geom_point(data = dflt, aes(x = dflt$Var1, y= dflt$Var2,colour = dflt$sig_level),
size = 12,
alpha = 0.5,
stat = "identity",
#position='stack',
show.legend = TRUE
)+
scale_color_manual(name = "p-value coding",
values = c("white", "green", "yellow", "red"   , "pink", "black"),
labels = c(">0.05", "<0.05", "<0.01" , "<0.001", "<0.0001", "not existent"))+
geom_text(data = dflt, aes(label= ifelse(value<0.05, sprintf("%0.3f", round(value,digits =3)),"")),
hjust=0.5, vjust=0.5, size = 3,
stat = "identity")+
geom_abline(slope = 1, intercept = 0) +
scale_y_continuous(breaks=seq(1, length(names), 1), labels = names, minor_breaks = NULL) +
scale_x_continuous(breaks=seq(1, length(names), 1), labels = names, minor_breaks = NULL)
ggplot(df, aes(x = Var1, y = Var2)) +
#geom_raster(aes(fill=value)) +
#scale_fill_gradient(low="grey90", high="red") +
labs(x="",
y="",
title="Significance Matrix",
caption="handmade with ggplot2") +
theme_bw() + theme(axis.text.x=element_text(size=9, angle=45, vjust=0.9, hjust=1.0),
axis.text.y=element_text(size=9),
plot.title=element_text(size=12),
aspect.ratio = 1) +
geom_point(data = dflt, aes(x = dflt$Var1, y= dflt$Var2,colour = dflt$sig_level),
size = 12,
alpha = 0.5,
stat = "identity",
#position='stack',
show.legend = TRUE
)+
scale_color_manual(name = "p-value coding",
values = c("white", "green", "yellow", "red"   , "pink", "black"),
labels = c(">0.05", "<0.05", "<0.01" , "<0.001", "<0.0001", "not existent"))+
geom_text(data = dflt, aes(label= ifelse(value<0.05, sprintf("%0.3f", round(value,digits =3)),"")),
hjust=0.5, vjust=0.5, size = 3,
stat = "identity")+
geom_abline(slope = 1, intercept = 0) +
scale_y_continuous(breaks=seq(1, length(names), 1), labels = names, minor_breaks = NULL) +
scale_x_continuous(breaks=seq(1, length(names), 1), labels = names, minor_breaks = NULL)
mat_p <- matrix(runif(196,0,0.1),nrow=14)
mat_t <- matrix(runif(196,0,10),nrow=14)
names <- c("frontal_right_A1",
"frontal_right_B2",
"frontal_right_A3",
"frontal_right_A4",
"frontal_right_A5",
"frontal_right_A6",
"frontal_right_A7",
"frontal_right_A8",
"frontal_right_A9",
"frontal_right_A10",
"frontal_right_A11",
"frontal_right_A12",
"frontal_right_A13",
"frontal_right_A14"
)
A <- mat_p
Alt_b = lower.tri(A, diag = FALSE)
Aut_b = upper.tri(A, diag = FALSE)
Alt <- A[Alt_b]
Aut <- A[Aut_b]
df_tval <- melt(mat_t)
df<-melt(A)
df$t_val <- df_tval$value
tmp <- as.character(df$value)
tmp[df$value<3]="1"
tmp[df$value<0.05]="2"
tmp[df$value<0.01]="3"
tmp[df$value<0.001]="4"
tmp[df$value<0.0001]="5"
# tmp[df$value<3]="pval >0.5"
# tmp[df$value<0.05]="0.01 < pval <= 0.05"
# tmp[df$value<0.01]="0.001 < pval <= 0.01"
# tmp[df$value<0.001]="0.0001 < pval <= 0.001"
# tmp[df$value<0.0001]="pval <= 0.0001"
sig_level = tmp
df$sig_level = tmp
df$lt<-melt(Alt_b)
df$ut<-melt(Aut_b)
#dflt <- df[df[,"lt.value"]==TRUE, ]
#df<-as_tibble(df)
dflt <- df %>% filter(lt$value==TRUE)
dfut <- df %>% filter(ut$value==TRUE)
View(df)
library(shiny)
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
library(reshape2)
library(ggplot2)
library(tidyverse)
mat_p <- matrix(runif(196,0,0.1),nrow=14)
mat_t <- matrix(runif(196,0,10),nrow=14)
names <- c("frontal_right_A1",
"frontal_right_B2",
"frontal_right_A3",
"frontal_right_A4",
"frontal_right_A5",
"frontal_right_A6",
"frontal_right_A7",
"frontal_right_A8",
"frontal_right_A9",
"frontal_right_A10",
"frontal_right_A11",
"frontal_right_A12",
"frontal_right_A13",
"frontal_right_A14"
)
A <- mat_p
Alt_b = lower.tri(A, diag = FALSE)
Aut_b = upper.tri(A, diag = FALSE)
Alt <- A[Alt_b]
Aut <- A[Aut_b]
df_tval <- melt(mat_t)
df<-melt(A)
df$t_val <- df_tval$value
tmp <- as.character(df$value)
tmp[df$value<3]="1"
tmp[df$value<0.05]="2"
tmp[df$value<0.01]="3"
tmp[df$value<0.001]="4"
tmp[df$value<0.0001]="5"
# tmp[df$value<3]="pval >0.5"
# tmp[df$value<0.05]="0.01 < pval <= 0.05"
# tmp[df$value<0.01]="0.001 < pval <= 0.01"
# tmp[df$value<0.001]="0.0001 < pval <= 0.001"
# tmp[df$value<0.0001]="pval <= 0.0001"
sig_level = tmp
df$sig_level = tmp
df$lt<-melt(Alt_b)
df$ut<-melt(Aut_b)
#dflt <- df[df[,"lt.value"]==TRUE, ]
#df<-as_tibble(df)
dflt <- df %>% filter(lt$value==TRUE)
dfut <- df %>% filter(ut$value==TRUE)
ggplot(df, aes(x = Var1, y = Var2)) +
#geom_raster(aes(fill=value)) +
#scale_fill_gradient(low="grey90", high="red") +
labs(x="",
y="",
title="Significance Matrix",
caption="handmade with ggplot2") +
theme_bw() + theme(axis.text.x=element_text(size=9, angle=45, vjust=0.9, hjust=1.0),
axis.text.y=element_text(size=9),
plot.title=element_text(size=12),
aspect.ratio = 1) +
geom_point(data = dflt, aes(x = dflt$Var1, y= dflt$Var2,colour = dflt$sig_level),
size = 12,
alpha = 0.5,
stat = "identity",
#position='stack',
show.legend = TRUE
)+
scale_color_manual(name = "p-value coding",
values = c("white", "green", "yellow", "red"   , "pink", "black"),
labels = c(">0.05", "<0.05", "<0.01" , "<0.001", "<0.0001", "not existent"))+
geom_text(data = dflt, aes(label= ifelse(value<0.05, sprintf("%0.3f", round(value,digits =3)),"")),
hjust=0.5, vjust=0.5, size = 3,
stat = "identity")+
geom_abline(slope = 1, intercept = 0) +
scale_y_continuous(breaks=seq(1, length(names), 1), labels = names, minor_breaks = NULL) +
scale_x_continuous(breaks=seq(1, length(names), 1), labels = names, minor_breaks = NULL)
# axis(1, at=1:length(names), labels = letters[1:length(names)])
# axis(1, at=1:length(names), labels = letters[1:length(names)])
#gg<-gg + scale_x_continuous(breaks=seq(1, length(names), 1), labels = names)
# axis(1, at=1:length(names), labels = letters[1:length(names)])
#gg<-gg + scale_x_continuous(breaks=seq(1, length(names), 1), labels = names)
#gg +
length(names)
runApp('app')
runApp('app')
runApp('app')
runApp('app')
library(shiny)
library(data.table)
D<-fread('./preprocessing/export_table_coh.csv', header = TRUE, sep = ',', check.names = FALSE)
library(tidyverse)
D2 <- D %>% select(-contains("frontal_links_A>"))
D2 <- D2 %>% select(-contains("frontopolar_A>"))
D2 <- D %>% select(-contains("frontal_rechts_A>"))
D2 <- D2 %>% select(-contains("frontal_links_A>"))
D2 <- D2 %>% select(-contains("frontopolar_A>"))
D2 <- D2 %>% select(-contains("temporal_links_A>"))
D2 <- D2 %>% select(-contains("temporal_rechts_A>"))
D2 <- D2 %>% select(-contains("frontocentral_l_A>"))
D2 <- D2 %>% select(-contains("frontocentral_r_A>"))
D2 <- D2 %>% select(-contains("parietal_links_A>"))
D2 <- D2 %>% select(-contains("parietal_rechts_A>"))
D2 <- D2 %>% select(-contains("parietooccipital_l_A>"))
D2 <- D2 %>% select(-contains("parietooccipital_r_A>"))
write.csv(D2,"./preprocessing/test_coh.csv", row.names = FALSE)
runApp('app')
D3 <- D2 %>% select(-contains("0."))
D3 <- D2 %>% select(-contains("0.1"))
D3 <- D2 %>% select(-contains("0."))
library(tidyverse)
D3 <- D2 %>% select(-contains("0."))
D3 <- D2 %>% select(-contains("parietooccipital_r_A>"))
library(tidyverse)
D2<-fread('./preprocessing/test_coh.csv', header = TRUE, sep = ',', check.names = FALSE)
library(data.table)
D2<-fread('./preprocessing/test_coh.csv', header = TRUE, sep = ',', check.names = FALSE)
D3 <- D2 %>% select(-contains("1."))
D3 <- D3 %>% select(-contains("2."))
D3 <- D3 %>% select(-contains("3."))
D3 <- D3 %>% select(-contains("4."))
D3 <- D3 %>% select(-contains("5."))
D3 <- D3 %>% select(-contains("6."))
D3 <- D3 %>% select(-contains("7."))
D3 <- D3 %>% select(-contains("8."))
D3 <- D3 %>% select(-contains("9."))
D3 <- D3 %>% select(-contains("8832"))
D3 <- D3 %>% select(-contains("9344"))
D3 <- D3 %>% select(-contains("12928"))
D3 <- D3 %>% select(-contains("13440"))
D3 <- D3 %>% select(-contains("14464"))
D3 <- D3 %>% select(-contains("29824"))
D3 <- D3 %>% select(-contains("30336"))
library(shiny)
runApp('app')
source('build_minimal_coh_csv_file.R')
source('G:/Programming/dataVIS/build_minimal_coh_csv_file.R')
library(data.table)
library(tidyverse)
D3<-fread('./preprocessing/export_table_coh.csv', header = TRUE, sep = ',', check.names = FALSE)
D3 <- D3 %>% select(-contains("parietooccipital_central_A>"))
D3 <- D3 %>% select(-contains(">parietooccipital_central_A"))
D3 <- D3 %>% select(-contains("frontal_links_A>"))
D3 <- D3 %>% select(-contains(">frontal_links_A"))
D3 <- D3 %>% select(-contains("frontal_rechts_A>"))
D3 <- D3 %>% select(-contains(">frontal_rechts_A"))
D3 <- D3 %>% select(-contains("frontocentral_links_A>"))
D3 <- D3 %>% select(-contains(">frontocentral_links_A"))
D3 <- D3 %>% select(-contains("frontocentral_rechts_A>"))
D3 <- D3 %>% select(-contains(">frontocentral_rechts_A"))
D3 <- D3 %>% select(-contains("temporal_links_A>"))
D3 <- D3 %>% select(-contains(">temporal_links_A"))
D3 <- D3 %>% select(-contains("temporal_rechts_A>"))
D3 <- D3 %>% select(-contains(">temporal_rechts_A"))
D3 <- D3 %>% select(-contains("parietal_links_A>"))
D3 <- D3 %>% select(-contains(">parietal_links_A"))
D3 <- D3 %>% select(-contains("parietal_rechts_A>"))
D3 <- D3 %>% select(-contains(">parietal_rechts_A"))
D3 <- D3 %>% select(-contains("parietooccipital_l_A>"))
D3 <- D3 %>% select(-contains(">parietooccipital_l_A"))
D3 <- D2 %>% select(-contains("parietooccipital_r_A>"))
D3 <- D2 %>% select(-contains(">parietooccipital_r_A"))
D3 <- D3 %>% select(-contains("parietooccipital_links_A>"))
D3 <- D3 %>% select(-contains(">parietooccipital_links_A"))
D3 <- D2 %>% select(-contains("parietooccipital_rechts_A>"))
D3 <- D3 %>% select(-contains("parietooccipital_rechts_A>"))
D3 <- D3 %>% select(-contains(">parietooccipital_rechts_A"))
D3 <- D3 %>% select(-contains("1."))
D3 <- D3 %>% select(-contains("2."))
D3 <- D3 %>% select(-contains("3."))
D3 <- D3 %>% select(-contains("4."))
D3 <- D3 %>% select(-contains("5."))
D3 <- D3 %>% select(-contains("6."))
D3 <- D3 %>% select(-contains("7."))
D3 <- D3 %>% select(-contains("8."))
D3 <- D3 %>% select(-contains("9."))
D3 <- D3 %>% select(-contains("8832"))
D3 <- D3 %>% select(-contains("9344"))
D3 <- D3 %>% select(-contains("12928"))
D3 <- D3 %>% select(-contains("13440"))
D3 <- D3 %>% select(-contains("14464"))
D3 <- D3 %>% select(-contains("29824"))
D3 <- D3 %>% select(-contains("30336"))
write.csv(D3,"./preprocessing/test_coh.csv", row.names = FALSE)
source('G:/Programming/dataVIS/build_minimal_coh_csv_file.R')
library(data.table)
library(tidyverse)
D3<-fread('./preprocessing/export_table_coh.csv', header = TRUE, sep = ',', check.names = FALSE)
D3 <- D3 %>% select(-contains("parietooccipital_central_A>"))
D3 <- D3 %>% select(-contains(">parietooccipital_central_A"))
D3 <- D3 %>% select(-contains("frontal_links_A>"))
D3 <- D3 %>% select(-contains(">frontal_links_A"))
D3 <- D3 %>% select(-contains("frontal_rechts_A>"))
D3 <- D3 %>% select(-contains(">frontal_rechts_A"))
D3 <- D3 %>% select(-contains("frontocentral_links_A>"))
D3 <- D3 %>% select(-contains(">frontocentral_links_A"))
D3 <- D3 %>% select(-contains("frontocentral_rechts_A>"))
D3 <- D3 %>% select(-contains(">frontocentral_rechts_A"))
D3 <- D3 %>% select(-contains("temporal_links_A>"))
D3 <- D3 %>% select(-contains(">temporal_links_A"))
D3 <- D3 %>% select(-contains("temporal_rechts_A>"))
D3 <- D3 %>% select(-contains(">temporal_rechts_A"))
D3 <- D3 %>% select(-contains("parietal_links_A>"))
D3 <- D3 %>% select(-contains(">parietal_links_A"))
D3 <- D3 %>% select(-contains("parietal_rechts_A>"))
D3 <- D3 %>% select(-contains(">parietal_rechts_A"))
D3 <- D3 %>% select(-contains("parietooccipital_links_A>"))
D3 <- D3 %>% select(-contains(">parietooccipital_links_A"))
D3 <- D3 %>% select(-contains("parietooccipital_rechts_A>"))
D3 <- D3 %>% select(-contains(">parietooccipital_rechts_A"))
D3 <- D3 %>% select(-contains("1."))
D3 <- D3 %>% select(-contains("2."))
D3 <- D3 %>% select(-contains("3."))
D3 <- D3 %>% select(-contains("4."))
D3 <- D3 %>% select(-contains("5."))
D3 <- D3 %>% select(-contains("6."))
D3 <- D3 %>% select(-contains("7."))
D3 <- D3 %>% select(-contains("8."))
D3 <- D3 %>% select(-contains("9."))
D3 <- D3 %>% select(-contains("10."))
D3 <- D3 %>% select(-contains("20."))
D3 <- D3 %>% select(-contains("30."))
D3 <- D3 %>% select(-contains("40."))
D3 <- D3 %>% select(-contains("8832"))
D3 <- D3 %>% select(-contains("9344"))
D3 <- D3 %>% select(-contains("12928"))
D3 <- D3 %>% select(-contains("13440"))
D3 <- D3 %>% select(-contains("14464"))
D3 <- D3 %>% select(-contains("29824"))
D3 <- D3 %>% select(-contains("30336"))
write.csv(D3,"./preprocessing/test_coh.csv", row.names = FALSE)
write.csv(D3,"./preprocessing/test_coh.csv", sep = "|" row.names = FALSE)
write.csv(D3,"./preprocessing/test_coh.csv", sep = "|", row.names = FALSE)
write.csv(D3,"./preprocessing/test_coh.csv", sep = ";", row.names = FALSE)
runTests("dataVIS", filter = "testthat")
setwd('..')
runTests("dataVIS", filter = "testthat")
library(shiny)
runTests("dataVIS", filter = "testthat")
runApp('app')
runApp('dataVIS/app')
runApp('dataVIS/app')
runApp('dataVIS/app')
runApp('dataVIS/app')
runApp('dataVIS/app')
library(shiny)
runApp('dataVIS/app')
runApp('dataVIS/app')
runApp('dataVIS/app')
library(shiny)
runApp('dataVIS/app')
runApp('dataVIS/app')
library(shiny)
runApp('dataVIS/app')
runApp('app')
runApp('app')
runApp('app')
library(shiny)
runApp('app')
library(shiny)
runApp('app')
runApp('app')
library(shiny)
runApp('app')
runApp('app')
library(shiny)
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
cat(file = stderr(),file.path("../data",method,"uregion_list.Rda") )
cat(file = stderr(),file.path("../data","Coherence_01","uregion_list.Rda") )
setwd('app')
x=file.path("../data","Coherence_01","uregion_list.Rda")
x
u <-readRDS(x)
setwd('..')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
library(shiny)
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runTests("app,filter=testthat")
setwd('app')
runApp('app')
runApp(".")
runTests("app",filter="testthat")
setwd('..')
runTests("app",filter="testthat")
coh_csv_filename = file.path(".","app", "tests", "data", "test_coh.csv")
coh_csv_filename
library(shiny)
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runTests("app",filter="testthat")
runTests("app",filter="testthat")
runTests("app",filter="testthat")
runTests("app",filter="testthat")
runTests("app",filter="testthat")
runTests("app",filter="testthat")
runTests("app",filter="testthat")
runTests("app",filter="testthat")
p = file.path(".","app","tests","testthat","data")
f1 = file.path(p,"test_beh.csv")
TB = fread(f1,)
runTests("app",filter="testthat")
runTests("app",filter="testthat")
runTests("app",filter="testthat")
