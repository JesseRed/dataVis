<<<<<<< HEAD
for (j in 1:dim(D$mdat)[2]){
for (k in 1:dim(D$mdat)[3]){
for (l in 1:dim(D$mdat)[4]){
for (m in 1:dim(D$mdat)[5]){
D$mdat[i,j,k,l,m] = 1.0*(k*2+j)
# if (k ==5){
#    D$mdat[i,j,k,l,m] = 5.0
# }
}
}
}
}
}
new_uregion_list_named = D$uregion_list_named
new_uregion_list_named$Areal1 <- 2
new_uregion_list_named$Areal2 <- 5
new_uregion_list_named$Areal3 <- 3
new_uregion_list_named$Areal4 <- 5
new_uregion_list_named$Areal5 <- 3
# Loeschung lehrer Columns
new_uregion_list_named <- remove_empty_cols(new_uregion_list_named)
expect_equal(length(new_uregion_list_named),5)
expect_equal(length(unique(unlist(new_uregion_list_named,use.names = F))),3)
expect_equal(max(unique(unlist(new_uregion_list_named,use.names = F))),3)
# mit Buchstaben versehen die neue Liste von Arelaen (A-N; 1-N)
new_uregion_list_named_adapt <- adapt_new_network(new_uregion_list_named)
num_regions_new = length(unique(unlist(new_uregion_list_named)))
num_regions_old = length(unique(unlist(D$uregion_list_named)))
# erstelle das leere Datanarray
m_new <- create_empty_array(D, num_regions_new, new_uregion_list_named_adapt)
expect_equal(dim(m_new)[1],dim(D$mdat)[1])
expect_equal(dim(m_new)[2],length(unique(unlist(new_uregion_list_named))))
expect_equal(dim(m_new)[2],num_regions_new)
expect_equal(dim(m_new)[3],dim(m_new)[2])
expect_equal(dim(m_new)[3],dim(D$mdat)[1])
expect_equal(dim(m_new)[4],dim(D$mdat)[4])
expect_equal(dim(m_new)[5],dim(D$mdat)[5])
regions_to_mean = get_regions_to_mean(num_regions_new, D$uregion_list_named, new_uregion_list_named)
gnew_uregion_list_named <<- new_uregion_list_named
r1vr2 <- get_mymean(D$mdat, 1,1,2,1,1, regions_to_mean )
D$mdat
r1vr2
r1vr2 <- get_mymean(D$mdat, 1,1,1,1,1, regions_to_mean )
r1vr2
get_mymean(D$mdat, 1,1,1,1,1, regions_to_mean )
source('G:/Programming/dataVis/app/functions/network_functions.R')
get_mymean(D$mdat, 1,1,1,1,1, regions_to_mean )
get_mymean(D$mdat, 1,1,2,1,1, regions_to_mean )
get_mymean(D$mdat, 1,1,3,1,1, regions_to_mean )
get_mymean(D$mdat, 1,2,1,1,1, regions_to_mean )
get_mymean(D$mdat, 1,2,1,1,1, regions_to_mean )
get_mymean(D$mdat, 1,2,3,1,1, regions_to_mean )
get_mymean(D$mdat, 1,3,2,1,1, regions_to_mean )
1/3
get_mymean(D$mdat, 1,3,1,1,1, regions_to_mean )
get_mymean(D$mdat, 1,3,2,1,1, regions_to_mean )
get_mymean(D$mdat, 1,2,3,1,1, regions_to_mean )
get_mymean(D$mdat, 1,3,2,1,1, regions_to_mean )
get_mymean(D$mdat, 1,3,2,1,1, regions_to_mean )
source('G:/Programming/dataVis/app/functions/network_functions.R')
get_mymean(D$mdat, 1,3,2,1,1, regions_to_mean )
source('G:/Programming/dataVis/app/functions/network_functions.R')
get_mymean(D$mdat, 1,2,3,1,1, regions_to_mean )
min(1,2)
source('G:/Programming/dataVis/app/functions/network_functions.R')
source('G:/Programming/dataVis/app/functions/network_functions.R')
get_mymean(D$mdat, 1,2,3,1,1, regions_to_mean )
get_mymean(D$mdat, 1,1,3,1,1, regions_to_mean )
get_mymean(D$mdat, 1,2,3,1,1, regions_to_mean )
get_mymean(D$mdat, 1,3,2,1,1, regions_to_mean )
source('G:/Programming/dataVis/app/functions/network_functions.R')
get_mymean(D$mdat, 1,3,2,1,1, regions_to_mean )
x = get_mymean(D$mdat, 1,3,2,1,1, regions_to_mean )
x
print(x, digits =5)
source('G:/Programming/dataVis/app/functions/network_functions.R')
x = get_mymean(D$mdat, 1,3,2,1,1, regions_to_mean )
source('G:/Programming/dataVis/app/functions/network_functions.R')
x = get_mymean(D$mdat, 1,3,2,1,1, regions_to_mean )
tmp_mean
tmp_mean = 0
source('G:/Programming/dataVis/app/functions/network_functions.R')
x = get_mymean(D$mdat, 1,3,2,1,1, regions_to_mean )
source('G:/Programming/dataVis/app/functions/network_functions.R')
x = get_mymean(D$mdat, 1,3,2,1,1, regions_to_mean )
source('G:/Programming/dataVis/app/functions/network_functions.R')
x = get_mymean(D$mdat, 1,3,2,1,1, regions_to_mean )
source('G:/Programming/dataVis/app/functions/network_functions.R')
x = get_mymean(D$mdat, 1,3,2,1,1, regions_to_mean )
x
x = get_mymean(D$mdat, 1,3,1,1,1, regions_to_mean )
get_mymean(D$mdat, 1,3,1,1,1, regions_to_mean )
runTests(appDir = 'app', filter = "filterlong")
runTests(appDir = 'app', filter = "testlong")
get_mymean(D$mdat, 1,1,2,1,1, regions_to_mean )
source('G:/Programming/dataVis/app/functions/network_functions.R')
get_mymean(D$mdat, 1,1,2,1,1, regions_to_mean )
runTests(appDir = 'app', filter = "testlong")
source('G:/Programming/dataVis/app/functions/network_functions.R')
runTests(appDir = 'app', filter = "testlong")
source('G:/Programming/dataVis/app/functions/network_functions.R')
library(shiny)
runTests(appDir= 'app', filter = 'testlong')
runapp('app')
runApp('app')
runTests(appDir= 'app', filter = 'testlong')
D
source('G:/Programming/dataVis/app/functions/network_functions.R')
source('G:/Programming/dataVis/app/functions/network_functions.R')
source('G:/Programming/dataVis/app/functions/network_functions.R')
source('G:/Programming/dataVis/app/functions/network_functions.R')
source('G:/Programming/dataVis/app/functions/network_functions.R')
runTests(appDir= 'app', filter = 'testlong')
Dnew$mdat
runTests(appDir= 'app', filter = 'testlong')
runTests(appDir= 'app', filter = 'testlong')
gDnew$mdat
gDnew$mdat[1,,,1,1]
gDnew$mdat[2,,,1,1]
gDnew$mdat[2,,,2,1]
gDnew$mdat[1,,,1,1]
D$mdat
D$mdat[1,,,1,1]
get_mymean(D$mdat, 1,1,2,1,1, regions_to_mean)
gDnew$mdat[1,,,1,1]
new_uregion_list_named
# numeriert eine Liste mit der Regionszahl mit names() = Letters
n_new_adapt <- adapt_new_network(new_uregion_list_named)
n_new_adapt
num_regions_new = length(unique(unlist(new_uregion_list_named)))
num_regions_new
num_regions_old = length(unique(unlist(D$uregion_list_named)))
m_new <- create_empty_array(D, num_regions_new, n_new_adapt)
regions_to_mean = get_regions_to_mean(num_regions_new, D$uregion_list_named, new_uregion_list_named)
for (s in 1:dim(D$mdat)[1]){
for (t in 1:dim(D$mdat)[4]){
for (f in 1:dim(D$mdat)[5]){
# nun uber die Regionen als 2 schleifen
m_new <- get_myareamean(D$mdat, m_new, s,t,f,num_regions_new, regions_to_mean)
}
}
}
m_new[1,,,1,1]
m_new[1,,,1,2]
m_new[2,,,1,2]
Dnew <- change_network_in_data_struct(D = D, new_uregion_list_named = new_uregion_list_named)
Dnew$mdat
Dnew$mdat[1,,,1,1]
D$mdat[1,,,1,1]
mdatn <- reestimate_mdat(D,new_uregion_list_named)
mdatn[1,,,1,1]
# veraendert werden muessen...
# 1. uregion_list
# 2. uregion_list_named
# 3. mdat
mdat_org = D$mdat
uregion_list_org = D$uregion_list
uregion_list_named_org = D$uregion_list_named
# entferne ausgelassene Columns
new_uregion_list_named <- remove_empty_cols(new_network)
D$mdat_org = D$mdat
View(D)
D$mdatx <- reestimate_mdat(D, new_uregion_list_named)
View(D)
D$mdat[1,,,1,1]
D$mdat_org[1,,,1,1]
D$mdatx[1,,,1,1]
new_uregion_list_named
new_uregion_list_named = D$uregion_list_named
new_uregion_list_named$Areal1 <- 2
new_uregion_list_named$Areal2 <- 5
new_uregion_list_named$Areal3 <- 3
new_uregion_list_named$Areal4 <- 5
new_uregion_list_named$Areal5 <- 3
new_uregion_list_named
Dnew <- change_network_in_data_struct(D = D, new_uregion_list_named = new_uregion_list_named)
Dnew$mdat[1,,,1,1]
new_uregion_list_named
source('G:/Programming/dataVis/app/functions/network_functions.R')
Dnew <- change_network_in_data_struct(D = D, new_uregion_list_named = new_uregion_list_named)
Dnew$mdat[1,,,1,1]
Dnew$mdatx[1,,,1,1]
Dnew$uregion_list
Dnew$uregion_list_named
m = matrix(c(1,9,7,6,1,10,5,11,1), nrow = 3, ncol = 3)
m
m = matrix(c(1,9,7,6,1,10,5,11,1), ncol = 3, nrow = 3)
m
m = matrix(c(1,6,5,9,1,11,7,10, 1), ncol = 3, nrow = 3)
m
runTests(appDir = 'app', filter = 'testlong')
source('G:/Programming/dataVis/app/functions/network_functions.R')
runTests(appDir = 'app', filter = 'testlong')
runTests(appDir = 'app', filter = 'testlong')
handmat = matrix(c(1,6,5,9,1,11,7,10, 1), ncol = 3, nrow = 3)
Dnew[1,,,1,1]
Dnew[1,,,1,1]
Dnew <- change_network_in_data_struct(D = D, new_uregion_list_named = new_uregion_list_named)
Dnew[1,,,1,1]
Dnew$mdat[1,,,1,1]
m2 = Dnew$mdat[1,,,1,1]
m2
handmat
runTests(appDir = 'app', filter = 'testlong')
runTests(appDir = 'app', filter = 'testlong')
runTests(appDir = 'app', filter = 'testlong')
runTests(appDir = 'app', filter = 'testlong')
runTests(appDir = 'app', filter = 'testlong')
source('G:/Programming/dataVis/app/functions/get_data2.R')
runApp(appDir = 'app', launch.browser = T)
source('G:/Programming/dataVis/app/functions/get_data2.R')
source('G:/Programming/dataVis/app/functions/get_data2.R')
source('G:/Programming/dataVis/app/functions/get_data2.R')
source('G:/Programming/dataVis/app/functions/network_functions.R')
runTests(appDir = 'app', filter = 'testlong')
source('G:/Programming/dataVis/app/functions/network_functions.R')
runApp(appDir = 'app', launch.browser = T)
source('G:/Programming/dataVis/app/modules/longitudinal_group_trials_plot.R')
source('G:/Programming/dataVis/app/functions/get_data2.R')
source('G:/Programming/dataVis/app/modules/longitudinal_group_trials_plot.R')
source('G:/Programming/dataVis/app/functions/network_functions.R')
source('G:/Programming/dataVis/app/modules/longitudinal_group_trials_plot.R')
source('G:/Programming/dataVis/app/modules/longitudinal_group_trials_plot.R')
source('G:/Programming/dataVis/app/modules/longitudinal_group_trials_plot.R')
runApp(appDir = 'app', launch.browser = T)
source('G:/Programming/dataVis/app/modules/longitudinal_group_trials_plot.R')
runApp(appDir = 'app', launch.browser = T)
source('G:/Programming/dataVis/app/modules/longitudinal_group_trials_plot.R')
runApp(appDir = 'app', launch.browser = T)
source('G:/Programming/dataVis/app/modules/longitudinal_group_trials_plot.R')
runApp(appDir = 'app', launch.browser = T)
source('G:/Programming/dataVis/app/modules/longitudinal_group_trials_plot.R')
runApp(appDir = 'app', launch.browser = T)
runTests(appDir = 'app', filter = 'testlong')
runTests(appDir = 'app', filter = 'testlong')
source('G:/Programming/dataVis/app/functions/network_functions.R')
runTests(appDir = 'app', filter = 'testlong')
runTests(appDir = 'app', filter = 'testlong')
source('G:/Programming/dataVis/app/functions/network_functions.R')
runTests(appDir = 'app', filter = 'testlong')
DX <- readRDS("./app/tests/testlong/data/fMRI2/Dorg.Rda")
View(DX)
Dnew <- change_network_in_data_struct(D = D, new_uregion_list_named = new_uregion_list_named, is_use_fast_algorithm = TRUE)
new_uregion_list_named
D$uregion_list_named
DX$uregion_list_named
new_uregion_list_named<- DX$uregion_list_named
new_uregion_list_named[1]
new_uregion_list_named[3]
new_uregion_list_named[3]<- 4
new_uregion_list_named[3]
new_uregion_list_named[2]<- 4
new_uregion_list_named[8]<- 9
new_uregion_list_named[18]<- 29
# teste die GEschwindigkeit der schnellen Variante
DX <- readRDS("./app/tests/testlong/data/fMRI2/Dorg.Rda")
new_uregion_list_namedX<- DX$uregion_list_named
new_uregion_list_namedX[3]<-4
new_uregion_list_namedX[6]<-7
new_uregion_list_namedX[29]<-35
new_uregion_list_namedX[2]<-14
start_time <- Sys.time()
DXnew <- change_network_in_data_struct(D = DX, new_uregion_list_named = new_uregion_list_namedX)
DX$mdat <- DX$mdat[1:20,,,,]
start_time <- Sys.time()
DX$mdat <- DX$mdat[1:20,,,,]
# teste die GEschwindigkeit der schnellen Variante
DX <- readRDS("./app/tests/testlong/data/fMRI2/Dorg.Rda")
new_uregion_list_namedX<- DX$uregion_list_named
new_uregion_list_namedX[3]<-4
new_uregion_list_namedX[6]<-7
new_uregion_list_namedX[29]<-35
new_uregion_list_namedX[2]<-14
start_time <- Sys.time()
DX$mdat <- DX$mdat[1:20,,,,]
DXnew <- change_network_in_data_struct(D = DX, new_uregion_list_named = new_uregion_list_namedX)
cat(file = stderr(), "without fast ... ", Sys.time()-start_time, "\n")
# teste die GEschwindigkeit der schnellen Variante
DX <- readRDS("./app/tests/testlong/data/fMRI2/Dorg.Rda")
DX$mdat <- DX$mdat[1:20,,,,]
View(DX)
DXnew <- change_network_in_data_struct(D = DX, new_uregion_list_named = new_uregion_list_namedX)
runTests(appDir = 'app', filter = 'testlong')
runTests(appDir = 'app', filter = 'testlong')
runTests(appDir = 'app', filter = 'testlong')
runTests(appDir = 'app', filter = 'testlong')
source('G:/Programming/dataVis/app/functions/network_functions.R')
runTests(appDir = 'app', filter = 'testlong')
source('G:/Programming/dataVis/app/functions/network_functions.R')
runTests(appDir = 'app', filter = 'testlong')
source('G:/Programming/dataVis/app/functions/network_functions.R')
runTests(appDir = 'app', filter = 'testlong')
source('G:/Programming/dataVis/app/functions/network_functions.R')
runTests(appDir = 'app', filter = 'testlong')
source('G:/Programming/dataVis/app/functions/network_functions.R')
runTests(appDir = 'app', filter = 'testlong')
runTests(appDir = 'app', filter = 'testlong')
runTests(appDir = 'app', filter = 'testlong')
D$id_list[1:20]
source('G:/Programming/dataVis/app/functions/network_functions.R')
runTests(appDir = 'app', filter = 'testlong')
source('G:/Programming/dataVis/app/functions/network_functions.R')
runTests(appDir = 'app', filter = 'testlong')
runTests(appDir = 'app', filter = 'testlong')
start_time <- Sys.time()
proc_time1 = Sys.time()-start_time
start_time <- Sys.time()
proc_time2 = Sys.time()-start_time
faster_time = (proc_time2/proc_time1)/100
proc_time2
class(proc_time1)
as.double(proc_time1)
runTests(appDir = 'app', filter = 'testlong')
cat(file = stderr(), paste0("fast algorithm was faster by ", round((as.double(proc_time2)/as.double(proc_time1))/100,2) ,"% \n"))
mdat_new <- ones(num_regions_new, num_regions_new)
class(mdat_new)
class(mdat)
class(D$mdat)
source('G:/Programming/dataVis/app/functions/network_functions.R')
runTests(appDir = 'app', filter = 'testlong')
runTests(appDir = 'app', filter = 'testlong')
runTests(appDir = 'app', filter = 'testlong')
runTests(appDir = 'app', filter = 'testlong')
runTests(appDir = 'app', filter = 'testlong')
runTests(appDir = 'app', filter = 'testlong')
View(gtmp2)
gtmp1
gtmp1[1,,,1,1]
tmp1[,]
gtmp1[,]
gtmp2[,]
runApp('app')
gtmp1
gtmp1x <- gtmp1[1,,,1,1]
dimnames(gtmp1x)
dimnames(gtimp1x)<-NULL
dimnames(gtmp1x)<-NULL
dimnames(gtmp2)<-NULL
identical(gtmp1x, gtmp2)
runTests(appDir = 'app', filter = 'testlong')
runTests(appDir = 'app', filter = 'testlong')
library(shiny)
runApp(appDir= 'app', launch.browser = T)
D <- readRDS("../dataVisdata/data/Coherence_1238/D.Rda")
names(D$df_BD)
colnames(D$df_BD)
x = colnames(D$df_BD)
x
"V163" %in% colnames(D$df_BD)
"V163s" %in% colnames(D$df_BD)
source('G:/Programming/dataVis/app/functions/get_data2.R')
runApp(appDir= 'app', launch.browser = T)
source('G:/Programming/dataVis/app/modules/longitudinal_group_trials_plot.R')
runApp(appDir= 'app', launch.browser = T)
source('G:/Programming/dataVis/app/functions/get_data.R')
runApp(appDir= 'app', launch.browser = T)
source('G:/Programming/dataVis/app/functions/get_data.R')
runApp(appDir= 'app', launch.browser = T)
gffreq
gfdata
dim(gfdata)
?asub
list(gffreq)
length(dim(data))
length(dim(gfdata))
runApp(appDir= 'app', launch.browser = T)
get_selected_freq_list(D$ufreq_list, c(0,5))
runApp(appDir= 'app', launch.browser = T)
get_selected_freq_list(D$ufreq_list, c(0,5))
runApp(appDir= 'app', launch.browser = T)
source('G:/Programming/dataVis/app/functions/get_data.R')
source('G:/Programming/dataVis/app/modules/longitudinal_group_trials_plot.R')
source('G:/Programming/dataVis/app/modules/longitudinal_group_trials_plot.R')
runApp(appDir= 'app', launch.browser = T)
source('G:/Programming/dataVis/app/modules/longitudinal_group_trials_plot.R')
runApp(appDir= 'app', launch.browser = T)
source('G:/Programming/dataVis/app/modules/longitudinal_group_trials_plot.R')
runApp(appDir= 'app', launch.browser = T)
source('G:/Programming/dataVis/app/modules/compare_group_stats.R')
runApp(appDir= 'app', launch.browser = T)
runApp(appDir= 'app', launch.browser = T)
runApp(appDir= 'app', launch.browser = T)
source('G:/Programming/dataVis/app/modules/compare_group_stats.R')
runApp(appDir= 'app', launch.browser = T)
library(shiny)
runApp(appDir= 'app', launch.browser =  TRUE)
runApp(appDir= 'app', launch.browser =  TRUE)
D <- readRDS("G:/Programming/dataVisdata/data/Conn_RS_01/D.Rda")
View(D)
View(D)
D$df_BD
D$mdat[1,,,1,1]
runApp(appDir= 'app', launch.browser =  TRUE)
runApp(appDir= 'app', launch.browser =  TRUE)
runApp(appDir= 'app', launch.browser =  TRUE)
View(gcorplot_matp)
View(gcorplot_matt)
View(gM)
gM$data1
View(gDnew)
View(D)
View(D)
D$id_list
D$id_list[1]
runApp(appDir= 'app', launch.browser =  TRUE)
runApp(appDir= 'app', launch.browser =  TRUE)
D$id_list
D$df_BD
D$mdat[1,1:5,1:5,1,1]
D$mdat[1,1:5,1:5,2,1]
D$mdat[2,1:5,1:5,2,1]
D$mdat[3,1:5,1:5,2,1]
D$mdat[4,1:5,1:5,2,1]
D$mdat[14,1:5,1:5,2,1]
runApp(appDir= 'app', launch.browser =  TRUE)
D$df_BD[D$df_BD$Gruppe ==2]
j <- fromJSON("G:/Programming/dataVisdata/prepro/Wagner/export_fmri_trials_corr.json")
j <- fromJSON(file = "G:/Programming/dataVisdata/prepro/Wagner/export_fmri_trials_corr.json")
j
View(j)
runApp(appDir= 'app', launch.browser =  TRUE)
runApp(appDir= 'app', launch.browser =  TRUE)
gcorplot_matp
min(gcorplot_matp)
runApp(appDir= 'app', launch.browser =  TRUE)
runApp(appDir= 'app', launch.browser =  TRUE)
runApp(appDir= 'app', launch.browser =  TRUE)
runApp(appDir= 'app', launch.browser =  TRUE)
runApp(appDir= 'app', launch.browser =  TRUE)
runApp(appDir= 'app', launch.browser =  TRUE)
min(gcorplot_matp)
gcorplot_matp
gcorplot_matp[1,2] = NA
min(gcorplot_matp)
min(gcorplot_matp, rm.na = TRUE)
min(gcorplot_matp, rm.na = F)
min(gcorplot_matp, na.rm = T)
runApp(appDir= 'app', launch.browser =  TRUE)
glob_mat_p
runApp(appDir= 'app', launch.browser =  TRUE)
source('G:/Programming/dataVis/app/functions/get_data2.R')
source('G:/Programming/dataVis/app/functions/get_data2.R')
source('G:/Programming/dataVis/app/functions/get_data2.R')
source('G:/Programming/dataVis/app/functions/get_data2.R')
source('G:/Programming/dataVis/app/functions/get_data2.R')
library('shiny')
runApp(appDir =  'app', launch.browser = T)
source('G:/Programming/dataVis/app/functions/get_data2.R')
runTests(appDir = 'app', filter = "testlong")
runTests(appDir = 'app', filter = "testlong")
runTests(appDir = 'app', filter = "testlong")
runTests(appDir = 'app', filter = "testlong")
runTests(appDir = 'app', filter = "testlong")
runTests(appDir = 'app', filter = "testlong")
View(gdx)
View(gdx)
d$explanation = paste0("Compare the in group diff of ", t1," vs ", t2, "between group ", g1, " and ", g2, "\n",
"unpaired t-test\n")
g1 = 1
g2 = 1
t1 = 1
t2 = 2
d$explanation = paste0("Compare the in group diff of ", t1," vs ", t2, "between group ", g1, " and ", g2, "\n",
"unpaired t-test\n")
explanation = paste0("Compare the in group diff of ", t1," vs ", t2, "between group ", g1, " and ", g2, "\n",
"unpaired t-test\n")
explanation
d$explanation = paste0("same group different trial not longitudinal... Compare the same group between 2 trials ", t1," vs ", t2, " in group ", g1, "\n",
"paired t-testindependent t-test\n")
explanation = paste0("same group different trial not longitudinal... Compare the same group between 2 trials ", t1," vs ", t2, " in group ", g1, "\n",
"paired t-testindependent t-test\n")
explanation
runTests(appDir = 'app', filter = "testlong")
runTests(appDir = 'app', filter = "testlong")
runTests(appDir = 'app', filter = "testlong")
srcfile <- attr(attr(get_selected_data_considering_group_trial(),"srcref"),"srcfile")
srcfile <- attr(attr(get_selected_data_considering_group_trial,"srcref"),"srcfile")
srcfile
source('G:/Programming/dataVis/app/functions/get_data.R')
runTests(appDir = 'app', filter = "testlong")
source('G:/Programming/dataVis/app/functions/get_data.R')
runTests(appDir = 'app', filter = "testlong")
View(glob_mat_t)
View(gdx)
runApp(appDir = 'app', launch.browser = T)
runApp(appDir = 'app', launch.browser = T)
runApp(appDir = 'app', launch.browser = T)
runApp(appDir = 'app', launch.browser = T)
source('G:/Programming/dataVis/app/modules/longitudinal_group_trials_plot.R')
source('G:/Programming/dataVis/app/modules/longitudinal_group_trials_plot.R')
source('G:/Programming/dataVis/app/modules/longitudinal_group_trials_plot.R')
source('G:/Programming/dataVis/app/functions/get_data2.R')
library('shiny')
runApp(appDir = 'app', launch.browser = T)
runApp(appDir = 'app', launch.browser = T)
runApp(appDir = 'app', launch.browser = T)
runApp(appDir = 'app', launch.browser = T)
runApp(appDir = 'app', launch.browser = T)
source('G:/Programming/dataVis/app/functions/get_data2.R')
source('G:/Programming/dataVis/app/functions/get_data2.R')
library('shiny')
runApp(appDir = 'app', launch.browser = T)
runApp(appDir = 'app', launch.browser = T)
runApp(appDir = 'app', launch.browser = T)
runApp(appDir = 'app', launch.browser = T)
runApp(appDir = 'app', launch.browser = T)
runApp(appDir = 'app', launch.browser = T)
runApp(appDir = 'app', launch.browser = T)
runApp(appDir = 'app', launch.browser = T)
View(g_myModel)
adjustedMeans<-effect("Gruppe",g_myModel, se=TRUE)
runApp(appDir = 'app', launch.browser = T)
=======
summary(T12.2)
summary(T23.2)
T23FA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+RFDiabetes+RFDemenz+RFHypertonus+RFHI+RFAF
, data = T23FA)
T23FA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+CHADSVASc+inmRS
, data = T23FA)
T23FA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+CHADSVASc+inmRS
, data = T23FA)
T23FA <- subset(T23, FA == 1)
T12.2 <- lm(Favorableoutcome~FA+NIHSS+Jahr+door2needle, data = T12)
T.2 <- lm(door2needle~FA+NIHSS+Jahr, data = T)
T12.2 <- lm(door2needle~FA+NIHSS+Jahr, data = T12)
T12.2 <- lm(door2needle~FA+NIHSS+Jahr+Alter+wakeup+Geschlecht+RFDiabetes+RFDemenz+RFHypertonus+RFHI+RFAF
, data = T12)
T23.2 <- lm(door2needle~FA+NIHSS+Jahr+Alter+wakeup+Geschlecht+RFDiabetes+RFDemenz+RFHypertonus+RFHI+RFAF
, data = T23)
T23FA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+CHADSVASc+inmRS
, data = T23FA)
T12 <- subset(T, Jahr<3)
T23 <- subset(T, Jahr>1)
T23FA <- subset(T23, FA == 1)
T12.2 <- lm(Favorableoutcome~FA+NIHSS+Jahr+door2needle, data = T12)
T.2 <- lm(door2needle~FA+NIHSS+Jahr, data = T)
T12.2 <- lm(door2needle~FA+NIHSS+Jahr, data = T12)
T12.2 <- lm(door2needle~FA+NIHSS+Jahr+Alter+wakeup+Geschlecht+RFDiabetes+RFDemenz+RFHypertonus+RFHI+RFAF
, data = T12)
T23.2 <- lm(door2needle~FA+NIHSS+Jahr+Alter+wakeup+Geschlecht+RFDiabetes+RFDemenz+RFHypertonus+RFHI+RFAF
, data = T23)
T23.2 <- lm(door2needle~FA+NIHSS+Jahr, data = T23)
summary(T.2)
summary(T12.2)
summary(T23.2)
T23FA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+RFDiabetes+RFDemenz+RFHypertonus+RFHI+RFAF
, data = T23FA)
T23FA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+CHADSVASc+inmRS
, data = T23FA)
summary(T23FA.2)
T23FA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+CHADSVASc+inmRS+vorangekuendigt
, data = T23FA)
summary(T23FA.2)
T23FA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+CHADSVASc+inmRS+vorangekuendigt+RFHI
, data = T23FA)
summary(T23FA.2)
T23FA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+CHADSVASc+inmRS+vorangekuendigt+RFHI+RFDemenz
, data = T23FA)
summary(T23FA.2)
T23FA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+CHADSVASc+inmRS+vorangekuendigt+RFHI+RFDemenz+RFDiabetes
, data = T23FA)
summary(T23FA.2)
T23FA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+CHADSVASc+inmRS+vorangekuendigt++RFHypertonus+RFHI+RFDemenz+RFDiabetes
, data = T23FA)
summary(T23FA.2)
T23FA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+CHADSVASc+inmRS+vorangekuendigt++RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFAF
, data = T23FA)
summary(T23FA.2)
T23FA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+CHADSVASc+inmRS+vorangekuendigt++RFHypertonus+RFHI+RFDemenz+RFDiabetes
, data = T23FA)
summary(T23FA.2)
T23FA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+vorangekuendigt++RFHypertonus+RFHI+RFDemenz+RFDiabetes
, data = T23FA)
summary(T23FA.2)
T23RA <- subset(T23, FA == 0)
T23RA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+vorangekuendigt++RFHypertonus+RFHI+RFDemenz+RFDiabetes
, data = T23RA)
summary(T23RA.2)
T12FA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+vorangekuendigt++RFHypertonus+RFHI+RFDemenz+RFDiabetes
, data = T12FA)
T <- read.csv("G:/Google Drive/paper/002_Lyse_Talk_II/submission_JSCVD2/R1/R1_data_for_Rx2.csv",sep=";", header = TRUE)
T12 <- subset(T, Jahr<3)
T23 <- subset(T, Jahr>1)
T12FA <- subset(T12, FA == 1)
T12RA <- subset(T12, FA == 0)
T23FA <- subset(T23, FA == 1)
T23RA <- subset(T23, FA == 0)
T12.2 <- lm(Favorableoutcome~FA+NIHSS+Jahr+door2needle, data = T12)
T.2 <- lm(door2needle~FA+NIHSS+Jahr, data = T)
T12.2 <- lm(door2needle~FA+NIHSS+Jahr, data = T12)
T12.2 <- lm(door2needle~FA+NIHSS+Jahr+Alter+wakeup+Geschlecht+RFDiabetes+RFDemenz+RFHypertonus+RFHI+RFAF
, data = T12)
T23.2 <- lm(door2needle~FA+NIHSS+Jahr+Alter+wakeup+Geschlecht+RFDiabetes+RFDemenz+RFHypertonus+RFHI+RFAF
, data = T23)
T23.2 <- lm(door2needle~FA+NIHSS+Jahr, data = T23)
summary(T.2)
summary(T12.2)
summary(T23.2)
T12FA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+vorangekuendigt++RFHypertonus+RFHI+RFDemenz+RFDiabetes
, data = T12FA)
summary(T12FA.2)
T12RA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+vorangekuendigt++RFHypertonus+RFHI+RFDemenz+RFDiabetes
, data = T12RA)
summary(T12RA.2)
T12.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+vorangekuendigt++RFHypertonus+RFHI+RFDemenz+RFDiabetes
, data = T12)
summary(T12RA.2)
T12.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+RFHypertonus+RFHI+RFDemenz+RFDiabetes
, data = T12)
summary(T12RA.2)
T12.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+RFHypertonus+RFHI+RFDemenz+RFDiabetes
, data = T12)
summary(T12.2)
T12FA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+RFHypertonus+RFHI+RFDemenz+RFDiabetes
, data = T12FA)
summary(T12FA.2)
T12RA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+RFHypertonus+RFHI+RFDemenz+RFDiabetes
, data = T12RA)
summary(T12RA.2)
T23.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+vorangekuendigt++RFHypertonus+RFHI+RFDemenz+RFDiabetes
, data = T23)
summary(T23.2)
T23FA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+vorangekuendigt++RFHypertonus+RFHI+RFDemenz+RFDiabetes
, data = T23FA)
summary(T23FA.2)
T23RA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+vorangekuendigt++RFHypertonus+RFHI+RFDemenz+RFDiabetes
, data = T23RA)
summary(T23RA.2)
T12.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+RFHypertonus+RFHI+RFDemenz+RFDiabetes
, data = T12)
summary(T12.2)
T12.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFZnTumor
, data = T12)
summary(T12.2)
T12.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFZnTumor+RFNI
, data = T12)
summary(T12.2)
T12.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFZnTumor+RFNI+RFAdipositas
, data = T12)
summary(T12.2)
T12.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFZnTumor+RFNI+RFAdipositas+RFpriorstroke
, data = T12)
summary(T12.2)
T23.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFZnTumor+RFNI+RFAdipositas+RFpriorstroke
, data = T23)
summary(T23.2)
T23FA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFZnTumor+RFNI+RFAdipositas+RFpriorstroke
, data = T23FA)
summary(T23FA.2)
T23RA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFZnTumor+RFNI+RFAdipositas+RFpriorstroke
, data = T23RA)
summary(T23RA.2)
door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+vorangekuendigt++RFHypertonus+RFHI+RFDemenz+RFDiabetes
summary(T23.2)
T23FA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+vorangekuendigt++RFHypertonus+RFHI+RFDemenz+RFDiabetes
, data = T23FA)
summary(T23FA.2)
T23RA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+vorangekuendigt++RFHypertonus+RFHI+RFDemenz+RFDiabetes
, data = T23RA)
summary(T23RA.2)
T23FA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+vorangekuendigt++RFHypertonus+RFHI+RFDemenz+RFDiabetes
, data = T23FA)
summary(T23FA.2)
T23FA.2 <- lm(door2neele~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+vorangekuendigt++RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFpriorstroke
, data = T23FA)
summary(T23FA.2)
T12.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+RFHypertonus+RFHI+RFDemenz+RFDiabetes
, data = T12)
summary(T12.2)
T12.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFpriorstroke
, data = T12)
summary(T12.2)
T12.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFpriorstroke+RFznTumor
, data = T12)
T12.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFpriorstroke+RFZnTumor
, data = T12)
summary(T12.2)
T12.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFpriorstroke+RFZnTumor
, data = T12)
summary(T12.2)
T23.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+vorangekuendigt++RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFpriorstroke+RFZnTumor
, data = T23)
summary(T23.2)
T23FA.2 <- lm(door2neele~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+vorangekuendigt++RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFpriorstroke+RFZnTumor
, data = T23FA)
summary(T23FA.2)
T23RA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+vorangekuendigt++RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFpriorstroke+RFZnTumor
, data = T23RA)
summary(T23RA.2)
x <-summary(T23RA.2)
View(x)
View(x)
View(T23RA)
View(T23RA.2)
View(x)
x.coefficients
View(x$coefficients)
T23.2 <- lm(door2needle~Jahr+FA+NIHSS+Alter+Geschlecht+wakeup+Dienstzeit+Symptom2ZNA+inmRS++RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFpriorstroke+RFZnTumor
, data = T23)
summary(T23.2)
T12.2 <- lm(door2needle~Jahr+FA+NIHSS+Alter+Geschlecht+wakeup+Dienstzeit+Symptom2ZNA+inmRS++RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFpriorstroke+RFZnTumor
, data = T12)
summary(T12.2)
T23.2 <- lm(door2needle~Jahr+FA+NIHSS+Alter+Geschlecht+wakeup+Dienstzeit+Symptom2ZNA+inmRS++RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFpriorstroke+RFZnTumor
, data = T23)
summary(T23.2)
T23FA.2 <- lm(door2needle~Jahr+FA+NIHSS+Alter+Geschlecht+wakeup+Dienstzeit+Symptom2ZNA+inmRS++RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFpriorstroke+RFZnTumor
, data = T23FA)
summary(T23FA.2)
T23FA.2 <- lm(door2needle~Jahr+NIHSS+Alter+Geschlecht+wakeup+Dienstzeit+Symptom2ZNA+inmRS++RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFpriorstroke+RFZnTumor
, data = T23FA)
summary(T23FA.2)
T23RA.2 <- lm(door2needle~Jahr+FA+NIHSS+Alter+Geschlecht+wakeup+Dienstzeit+Symptom2ZNA+inmRS++RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFpriorstroke+RFZnTumor
, data = T23RA)
summary(T23RA.2)
T23FA.2 <- lm(door2needle~Jahr+NIHSS+Alter+Geschlecht+wakeup+Dienstzeit+Symptom2ZNA+inmRS++RFHypertonus+RFHI+RFDemenz+RFDiabetes
, data = T23FA)
summary(T23FA.2)
T23FA.2 <- lm(door2needle~Jahr+NIHSS+Alter+Geschlecht+wakeup+Dienstzeit+Symptom2ZNA+inmRS+RFHypertonus+RFHI+RFDemenz+RFDiabetes
, data = T23FA)
summary(T23FA.2)
T23FA.2 <- lm(door2needle~Jahr+NIHSS+Alter+Geschlecht+wakeup+Dienstzeit+Symptom2ZNA+inmRS
, data = T23FA)
summary(T23FA.2)
T23FA.2 <- lm(door2needle~Jahr+NIHSS+Alter+Geschlecht+wakeup+Dienstzeit+Symptom2ZNA
, data = T23FA)
summary(T23FA.2)
T23FA.2 <- lm(door2needle~Jahr+NIHSS+Alter+Geschlecht+wakeup+Dienstzeit
, data = T23FA)
summary(T23FA.2)
T23FA.2 <- lm(door2needle~Jahr+NIHSS+Alter+Geschlecht+wakeup
, data = T23FA)
summary(T23FA.2)
T23FA.2 <- lm(door2needle~Jahr+NIHSS+Alter+Geschlecht
, data = T23FA)
summary(T23FA.2)
T23FA.2 <- lm(door2needle~Jahr+NIHSS+Alter
, data = T23FA)
summary(T23FA.2)
T23FA.2 <- lm(door2needle~Jahr+NIHSS+Alter+Geschlecht
, data = T23FA)
summary(T23FA.2)
T23FA.2 <- lm(door2neele~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+vorangekuendigt++RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFpriorstroke+RFZnTumor
, data = T23FA)
summary(T23FA.2)
T23FA.2 <- lm(door2neele~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+vorangekuendigt++RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFpriorstroke+RFZnTumor
, data = T23FA)
summary(T23FA.2)
T12FA.2 <- lm(door2needle~NIHSS+Jahr+Alter+Geschlecht+wakeup+Dienstzeit+Symptom2ZNA+inmRS+RFHypertonus+RFHI+RFDemenz+RFDiabetes
, data = T12FA)
summary(T12FA.2)
T12RA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+RFHypertonus+RFHI+RFDemenz+RFDiabetes
, data = T12RA)
summary(T12RA.2)
T12.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFpriorstroke+RFZnTumor
, data = T12)
summary(T12.2)
T23 <- subset(T, Jahr>1)
T23FA <- subset(T23, FA == 1)
T23FA.2 <- lm(door2neele~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+vorangekuendigt++RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFpriorstroke+RFZnTumor
, data = T23FA)
T23FA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+vorangekuendigt++RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFpriorstroke+RFZnTumor
, data = T23FA)
summary(T23FA.2)
T23FA.2 <- lm(door2needle~Jahr+FA+NIHSS+Alter+Geschlecht+wakeup+Dienstzeit+Symptom2ZNA+inmRS++RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFpriorstroke+RFZnTumor
, data = T23FA)
summary(T23FA.2)
T23FA.2 <- lm(door2needle~Jahr+FA+NIHSS+Alter+Geschlecht+wakeup+Dienstzeit+Symptom2ZNA+inmRS++RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFpriorstroke+RFZnTumor
, data = T23FA)
summary(T23FA.2)
T23FA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+vorangekuendigt++RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFpriorstroke+RFZnTumor
, data = T23FA)
summary(T23FA.2)
T23FA.2 <- lm(door2needle~Jahr+FA+NIHSS+Alter+Geschlecht+wakeup+Dienstzeit+Symptom2ZNA+inmRS++RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFpriorstroke+RFZnTumor+vorangekuendigt
, data = T23FA)
summary(T23FA.2)
T23RA.2 <- lm(door2needle~Jahr+FA+NIHSS+Alter+Geschlecht+wakeup+Dienstzeit+Symptom2ZNA+inmRS+RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFpriorstroke+RFZnTumor+vorangekuendigt
, data = T23RA)
T23.2 <- lm(door2needle~Jahr+FA+NIHSS+Alter+Geschlecht+wakeup+Dienstzeit+Symptom2ZNA+inmRS+RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFpriorstroke+RFZnTumor+vorangekuendigt
, data = T23)
summary(T23.2)
T23FA.2 <- lm(door2needle~Jahr+FA+NIHSS+Alter+Geschlecht+wakeup+Dienstzeit+Symptom2ZNA+inmRS+RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFpriorstroke+RFZnTumor+vorangekuendigt
, data = T23FA)
summary(T23FA.2)
T23RA.2 <- lm(door2needle~Jahr+FA+NIHSS+Alter+Geschlecht+wakeup+Dienstzeit+Symptom2ZNA+inmRS+RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFpriorstroke+RFZnTumor+vorangekuendigt
, data = T23RA)
summary(T23RA.2)
T12FA.2 <- lm(door2needle~NIHSS+Jahr+Alter+Geschlecht+wakeup+Dienstzeit+Symptom2ZNA+inmRS+RFHypertonus+RFHI+RFDemenz+RFDiabetes
, data = T12FA)
summary(T12FA.2)
T12RA.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+RFHypertonus+RFHI+RFDemenz+RFDiabetes
, data = T12RA)
summary(T12RA.2)
T12.2 <- lm(door2needle~NIHSS+Jahr+Alter+wakeup+Geschlecht+Dienstzeit+Symptom2ZNA+inmRS+RFHypertonus+RFHI+RFDemenz+RFDiabetes+RFpriorstroke+RFZnTumor
, data = T12)
summary(T12.2)
View(T23FA.2$coefficients)
View(T23FA)
View(T23FA$coefficients)
View(T23RA.2)
rm(list=ls())
shiny::runApp('G:/OneDrive/R/Laura/test')
runApp('G:/OneDrive/R/Laura/m_all')
runApp('G:/OneDrive/R/Laura/m_all')
runApp('G:/OneDrive/R/Laura/m_all')
runApp('G:/OneDrive/R/Laura/m_all')
runApp('G:/OneDrive/R/Laura/m_all')
runApp('G:/OneDrive/R/Laura/m_all')
runApp('G:/OneDrive/R/Laura/m_all')
runApp('G:/OneDrive/R/Laura/m_all')
runApp('G:/OneDrive/R/Laura/test')
runApp('G:/OneDrive/R/Laura/m_all')
runApp('G:/OneDrive/R/Laura/m_all')
runApp('G:/OneDrive/R/Laura/m_all')
runApp('G:/OneDrive/R/Laura/m_all')
runApp('G:/OneDrive/R/Laura/m_all')
runApp('G:/OneDrive/R/Laura/m_all')
runApp('G:/OneDrive/R/Laura/m_all')
runApp('G:/OneDrive/R/Laura/m_all')
runApp('G:/OneDrive/R/Laura/m_all')
runApp('G:/OneDrive/R/Laura/m_all')
runApp('G:/OneDrive/R/Laura/m_all')
runApp('G:/OneDrive/R/Laura/m_all')
source('G:/OneDrive/R/Laura/m_all/compare_trials_stats.R')
runApp('G:/OneDrive/R/Laura/m_all')
runApp('G:/OneDrive/R/Laura/m_all')
runApp('G:/OneDrive/R/Laura/m_all')
runApp('G:/OneDrive/R/Laura/m_all')
getwd()\
getwd()
library('shiny')
runApp('app')
setwd("G:/Programming/dataVis")
setwd("G:/Programming/dataVis")
runApp('app')
cutoff.distance = 0.05
makeColorRampPalette <- function(colors, cutoff.fraction, num.colors.in.palette)
{
stopifnot(length(colors) == 4)
ramp1 <- colorRampPalette(colors[1:2])(num.colors.in.palette * cutoff.fraction)
ramp2 <- colorRampPalette(colors[3:4])(num.colors.in.palette * (1 - cutoff.fraction))
return(c(ramp1, ramp2))
}
cols <- makeColorRampPalette(c("red", "orange",    # distances 0 to 3 colored from white to red
"gray", "black"), # distances 3 to max(distmat) colored from green to black
cutoff.distance / 1, #max(mat_p), #max(distmat),
100)
cols
runApp('app')
runApp('app')
ramp1 <- colorRampPalette(colors[1:2])(num.colors.in.palette * cutoff.fraction)
ramp1 <- colorRampPalette(colors[1:2])(num.colors.in.palette * 0.05)
colors = c("red","orange")
ramp1 <- colorRampPalette(colors[1:2])(num.colors.in.palette * 0.05)
ramp1 <- colorRampPalette(colors[1:2])(100 * 0.05)
ramp1
ramp2 <- colorRampPalette(colors[1:2])(100 * 0.95)
length(ramp2)
runApp('app')
min(glob_mat_p)
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
runApp('app')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
runApp('app')
cd ..
app
shiny('app.r')
runApp()
install.packages(shinyBS)
install.packages('shinyBS')
runApp()
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
runApp('app')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
runApp('app')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
runApp('app')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
runApp('app')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
runApp('app')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
runApp('app')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
runApp('app')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
runApp('app')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
runApp('app')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
runApp('app')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
runApp('app')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
runApp('app')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
runApp('app')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
runApp('app')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
runApp('app')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
runApp('app')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
runApp('app')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
runApp('app')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
runApp('app')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
runApp('app')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
runApp('app')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
runApp('app')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
runApp('app')
colnames(bd2x)
p<-ggplot(data = dfw(), aes(x = Measurement_num, y = Zeichen, col = ID, shape = ID, color = ID)) +
geom_line()+
geom_point(size = 3)+ # shape = 21, color="black", fill="#69b3a2", size=6) +
ggtitle(paste0(input$column1," vs. ", input$column2))
p<-ggplot(data = bd2x, aes(x = Measurement_num, y = Zeichen, col = ID, shape = ID, color = ID)) +
geom_line()+
geom_point(size = 3)+ # shape = 21, color="black", fill="#69b3a2", size=6) +
ggtitle(paste0(input$column1," vs. ", input$column2))
p<-ggplot(data = bd2x, aes(x = Measurement_num, y = Zeichen, col = ID, shape = ID, color = ID)) +
geom_line()+
geom_point(size = 3)+ # shape = 21, color="black", fill="#69b3a2", size=6)
)
p<-ggplot(data = bd2x, aes(x = Measurement_num, y = Zeichen, col = ID, shape = ID, color = ID)) +
geom_line()+
geom_point(size = 3)
p<-ggplot(data = bd2x, aes(x = Measurement_num, y = Zeichen, col = ID, shape = ID, color = ID)) +
geom_line()
p<-ggplot(data = bd2x, aes(x = Measurement_num, y = Zeichen, col = ID)) +
geom_line()
p<-ggplot(data = bd2x, aes(x = Measurement_num, y = Zeichen, col = ID)) +
geom_line()
p
ggplot(data = bd2x, aes(x = Measurement_num, y = Zeichen, col = ID, group = ID)) +
geom_line()
b = bd2x
ggplot(data = b, aes(x = Measurement_num, y = Zeichen) +
geom_line(group = ID)
)
ggplot(data = b, aes(x = Measurement_num, y = Zeichen)) +
geom_line(group = ID)
ggplot(data = b, aes(x = Measurement_num, y = Zeichen)) +
geom_line(group = 'ID')
ggplot(data = b, aes(x = Measurement_num, y = Zeichen, group = "ID")) +
geom_line()
b
ggplot(data = b, aes(x = Measurement_num, y = Zeichen, group = ID)) +
geom_line()
colnames(b)
ggplot(data = b, aes(x = Measurement_num, y = Zeichen, group = "Tag")) +
geom_line()
ggplot(data = b, aes(x = Measurement_num, y = Zeichen, group = "Measurement_str")) +
geom_line()
ggplot(data = b, aes(x = Measurement_num, y = Zeichen)) +
geom_line()
ggplot(data = b, aes(x = Measurement_num, y = Zeichen, group = "ID")) +
geom_line()
ggplot(data = b, aes(x = Measurement_num, y = Zeichen, group = "ID")) +
geom_line(data= b, group = "ID")
b$ID
ggplot(data = b, aes(x = Measurement_num, y = Zeichen, group = factor(ID))) +
geom_line(data= b, group = "ID")
ggplot(data = b, aes(x = Measurement_num, y = Zeichen, group = factor(ID))) +geom_line()
ggplot(data = b, aes(x = Measurement_num, y = Zeichen, group = factor(ID))) +geom_line(data = b, aes(x = Measurement_num, y = Zeichen, group = factor(ID)))
b.head
b.head()
head(b)
ggplot(data = b, aes(x = Measurement_num, y = Zeichen, group = factor(ID))) +geom_line(data = b, aes(x = Measurement_num, y = Zeichen, group = Dauer))
ggplot(data = b, aes(x = Measurement_num, y = Zeichen)) +geom_line(data = b, aes(x = Measurement_num, y = Zeichen, group = Dauer))
ggplot(data = b, aes(x = Measurement_num, y = Zeichen)) +geom_line(aes(group = Dauer))
ggplot() + geom_line(aes(x = Measurement_num, y = Zeichen, group = Dauer))
ggplot() + geom_line(data = b, aes(x = Measurement_num, y = Zeichen, group = Dauer))
ggplot() + geom_line(data = b, aes(x = Measurement_num, y = Zeichen, group = ID))
ggplot() + geom_line(data = b, aes(x = Measurement_num, y = Zeichen, group = "ID"))
ggplot() + geom_line(data = b, aes(x = Measurement_num, y = Zeichen, group = factor("ID")))
ggplot() + geom_line(data = b, aes(x = Measurement_num, y = Zeichen, group = factor(ID)))
ggplot(diamonds, aes(price, colour = cut)) +
geom_freqpoly()
head(diamonds)
ggplot(diamonds, aes(price, colour = cut))
ggplot(diamonds, aes(price, colour = cut))+ geom_line()
ggplot(diamonds, aes(x = carat, y = price, colour = cut))+ geom_line()
ggplot(diamonds, aes(x = carat, y = price, colour = cut))
ggplot(diamonds, aes(x = carat, y = price, colour = cut)) + geom_line()
ggplot(diamonds, aes(x = carat, y = price, colour = cut, group = cut)) + geom_line()
head(b)
ggplot(b, aes(x = Measurement_str, y = Punkte, colour = ID, group = ID)) + geom_line()
bz <- b[is.na(b)]<-0
ggplot(bz, aes(x = Measurement_str, y = Punkte, colour = ID, group = ID)) + geom_line()
bz <- b
bz[is.na(b)]<-0
ggplot(bz, aes(x = Measurement_str, y = Punkte, colour = ID, group = ID)) + geom_line()
b$Zeichen
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
dfl = wide2long(dfwide)
dfwide = fread(file = "G:/Programming/dataVisdata/data/Behavioral/Tipp10_Auswertung3.csv")
dfl = wide2long(dfwide)
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
dfl = wide2long(dfwide)
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
ggplot(dfl, aes(x = Measurement_str, y = Punkte, group = ID)) + geom_line()
ggplot(dfl, aes(x = Measurement_str, y = Punkte, colour = ID, group = ID)) + geom_line()
source('G:/Programming/dataVis/app/modules/behavioral_plot.R')
runApp('app')
>>>>>>> 2d838b8f5f94f7854c105dd6ec3a1771c6573efc
