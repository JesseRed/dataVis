runApp('app')
comparing_independent_rs<-function(r1, r2, n1, n2){
zd<-(atanh(r1)-atanh(r2))/sqrt(1/(n1-3)+1/(n2-3))
p <-1 - pnorm(abs(zd))
return(c(zd,p))
}
comparing_independent_rs(3,4,33,34)
comparing_independent_rs(0.3,0.4,33,34)
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
comparing_independent_rs<-function(r1, r2, n1, n2){
zd<-(atanh(r1)-atanh(r2))/sqrt(1/(n1-3)+1/(n2-3))
p <-1 - pnorm(abs(zd))
return(c(zd,p))
}
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
x
y
z = t.test(x,y, paired = FALSE)
z
z$mydis = "sadfjasdf"
z
z$mydis
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
library(ggm)
data.frame(a = x, b=y, c=c1, d=c2, e=c3)
x
c1 = c(2,3,5,4,3)
c2 = c(1,3,5,3,2)
c3 = c(3,2,3,3,3)
df <- data.frame(a = x, b=y, c=c1, d=c2, e=c3)
pcor(c("a","b","c","d","e"), var(df))
x = c(x,x)
x
y = c(y,y)
c1 = c(c1,c1)
c2 = c(c2,c2)
c3 = c(c3,c3)
df <- data.frame(a = x, b=y, c=c1, d=c2, e=c3)
pcor(c("a","b","c","d","e"), var(df))
pc
pc <-pcor(c("a","b","c","d","e"), var(df))
pc
df
df <- data.frame(replicate(10,sample(0:1,1000,rep=TRUE)))
head(df)
pc <-pcor(c("X1","X2","X3","X4","X5"), var(df))
pc
pcor.test(pc,1 , 22)
pcor.test(pc,1 , 1000)
xx = pcor.test(pc,1 , 1000)
xx
xx[1]
runApp('app')
runApp('app')
runApp('app')
x
df <- data.frame(x1 = x, y1 = y)
b = c1
cbind(df, c1)
cbind(df, c2)
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
shiny::runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
names <- c(rep("A", 80) , rep("B", 50) , rep("C", 70))
value <- c( rnorm(80 , mean=10 , sd=9) , rnorm(50 , mean=2 , sd=15) , rnorm(70 , mean=30 , sd=10) )
data <- data.frame(names,value)
# Basic boxplot
boxplot(data$value ~ data$names , col=terrain.colors(4) )
# Add data points
mylevels <- levels(data$names)
levelProportions <- summary(data$names)/nrow(data)
for(i in 1:length(mylevels)){
thislevel <- mylevels[i]
thisvalues <- data[data$names==thislevel, "value"]
# take the x-axis indices and add a jitter, proportional to the N in each level
myjitter <- jitter(rep(i, length(thisvalues)), amount=levelProportions[i]/2)
points(myjitter, thisvalues, pch=20, col=rgb(0,0,0,.9))
}
runApp('app')
runApp('app')
runApp('app')
libido<-c(3,2,5,2,2,2,7,2,4,7,5,3,4,4,7,5,4,9,2,6,3,4,4,4,6,4,6,2,8,5)
partnerLibido<-c(4,1,5,1,2,2,7,4,5,5,3,1,2,2,6,4,2,1,3,5,4,3,3,2,0,1,3,0,1,0)
dose<-c(rep(1,9),rep(2,8), rep(3,13))
dose<-factor(dose, levels = c(1:3), labels = c("Placebo", "Low Dose", "High Dose"))
viagraData<-data.frame(dose, libido, partnerLibido)
contrasts(viagraData$dose)<-cbind(c(-2,1,1), c(0,-1,1))
viagraModel<-aov(libido~ partnerLibido + dose, data = viagraData)
Anova(viagraModel, type="III")
library(compute.es)
library(multcomp)
library(WRS)
library(car)
library(pastecs)
install.packages("WRS", repos= "http://R-Forge.R-project.org")
library(compute.es)
library(multcomp)
library(WRS)
library(car)
library(pastecs)
contrasts(viagraData$dose)<-cbind(c(-2,1,1), c(0,-1,1))
viagraModel<-aov(libido~ partnerLibido + dose, data = viagraData)
Anova(viagraModel, type="III")
contrasts(viagraData$dose)<-cbind(c(-2,1,1), c(0,-1,1))
viagraModel<-aov(libido~ partnerLibido + dose, data = viagraData)
d<-Anova(viagraModel, type="III")
d
class(d)
d[1]
d[2]
d[3]
head(d)
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
View(data)
View(data)
runApp('app')
environment()
globalenv()
globalenv()
runApp('app')
source("./functions/get_data.R")
get_global_data("Coherence")
source("./functions/get_data.R")
get_global_data_for_debugging("Coherence")
source("./functions/get_data.R")
get_global_data_for_debugging("Coherence")
source("./functions/get_data.R")
get_global_data_for_debugging("Coherence")
data_g1_t1 <- get_data_group_trial_freqmean(data, "Group1", 1, c[8,14])
data_g1_t1 <- data[1:22,2,3,1,8:16]
data_g1_t1
nrow(viagraData)
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
x = c(1,2,3,4,5)
y = c(2,3,4,5,6)
b1 = c(1,2,4,4,4)
b2 = c(3,3,4,3,3)
g1 = "group1"
g2 = "group2"
df <- data.frame(Gruppe=c(rep(g1, times=length(x)),
rep(g2, times=length(y))),
val=c(x, y))
df
df<- cbind(df, c(b1,b2))
df
b3 = b1
df<- cbind(df, c(b3,b2))
df
n = c("Gruppe", "val")
n<- c(n, "b1")
n<- c(n, "b2")
names(df)<-n
df
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
libido<-c(3,2,5,2,2,2,7,2,4,7,5,3,4,4,7,5,4,9,2,6,3,4,4,4,6,4,6,2,8,5)
partnerLibido<-c(4,1,5,1,2,2,7,4,5,5,3,1,2,2,6,4,2,1,3,5,4,3,3,2,0,1,3,0,1,0)
dose<-c(rep(1,9),rep(2,8), rep(3,13))
dose<-factor(dose, levels = c(1:3), labels = c("Placebo", "Low Dose", "High Dose"))
viagraData<-data.frame(dose, libido, partnerLibido)
#contrasts(viagraData$dose)<-contr.helmert(3)
contrasts(viagraData$dose)<-cbind(c(-2,1,1), c(0,-1,1))
viagraModel<-aov(libido~ partnerLibido + dose, data = viagraData)
Anova(viagraModel, type="III")
library(car)
library(compute.es)
library(effects)
library(ggplot2)
library(multcomp)
library(pastecs)
library(WRS)
library(reshape)
install.packages("WRS", repos="http://R-Forge.R-project.org")
library(WRS)
contrasts(viagraData$dose)<-cbind(c(-2,1,1), c(0,-1,1))
viagraModel<-aov(libido~ partnerLibido + dose, data = viagraData)
Anova(viagraModel, type="III")
viagraModel<-aov(libido~ partnerLibido + dose, data = viagraData)
n = c("libido","partnerLibido", "dose")
viagraModel<-aov(libido~ partnerLibido + n[3], data = viagraData)
View(viagraData)
viagraModel<-aov(data[,2]~ data[,3] + data[,1], data = viagraData)
results_LM <- function(data, var) {
lm(data[, 1] ~ data[, var])
}
results_LM(mtcars, "disp")
lm(mpg ~ disp, data = mtcars)
results_LM <- function(data, var1, var2) {
aov(data[, 1] ~ data[, var1]+cata[,var2])}
mpg
results_LM(mpg, "disp", var2) {
mtcars
results_LM(mtcars, "disp", "hp") {
results_LM(mtcars, "disp", "hp")
results_aov <- function(data, var1, var2) {
aov(data[, 1] ~ data[, var1]+data[,var2])}
results_aov(mtcars, "disp", "hp")
results_aov <- function(data,var0, var1, var2) {
aov(data[, var0] ~ data[, var1]+data[,var2])}
results_aov(mtcars,"mpg", "disp", "hp")
viagraModel<-aov(data[,2]~ data[,3] + data[,1], data = viagraData)
viagraModel<-aov(libido~ partnerLibido + dose, data = viagraData)
Anova(viagraModel, type="III")
viagraModel<- results_aov(viagraData,"libido", "partnerLibido", "dose")
Anova(viagraModel, type="III")
viagraModel<-aov(data[,"libido"]~ data[,"partnerLibido"] + data[,"dose"])
viagraModel<-aov(viagraData[,"libido"]~ viagraData[,"partnerLibido"] + viagraData[,"dose"], )
Anova(viagraModel, type="III")
v1 = "libido"
v2 = "partnerLibido"
v3 = "dose"
viagraModel<-aov(viagraData[,v1]~ viagraData[,v2] + viagraData[,v3], )
Anova(viagraModel, type="III")
viagraModel<-aov(viagraData[,3]~ viagraData[,1] + viagraData[,2], )
viagraModel<-aov(viagraData[,3]~ viagraData[,1:2] )
viagraData[,1:2]
Y = viagraData
X = viagraData
dat <- cbind(data.frame(Y=Y),as.data.frame(X))
View(dat)
View(dat)
fit <- lm( Y~. , data=dat )
libido<-c(3,2,5,2,2,2,7,2,4,7,5,3,4,4,7,5,4,9,2,6,3,4,4,4,6,4,6,2,8,5)
partnerLibido<-c(4,1,5,1,2,2,7,4,5,5,3,1,2,2,6,4,2,1,3,5,4,3,3,2,0,1,3,0,1,0)
dose<-c(rep(1,9),rep(2,8), rep(3,13))
dose<-factor(dose, levels = c(1:3), labels = c("Placebo", "Low Dose", "High Dose"))
viagraData<-data.frame(dose, libido, partnerLibido)
V2-data.frame(libido, partnerLibido, dose)
V2<-data.frame(libido, partnerLibido, dose)
dat<-data.frame(partnerLibido, dose)
Y<-data.frame(libido)
fit <- lm( Y ~ . , data=dat )
Y = libido
M = matrix(1:90, nrow=30, byrow=TRUE)
fit <- lm( Y ~ . , data=M )
X <- data.frame(partnerLibido, dose)
fit <- lm( Y ~ . , data=M )
fit <- lm( Y ~ . , data=X )
shiny::runApp('app')
shiny::runApp('app')
library(ggplot2)
# create a data frame
variety=rep(LETTERS[1:7], each=40)
treatment=rep(c("high","low"),each=20)
note=seq(1:280)+sample(1:150, 280, replace=T)
data=data.frame(variety, treatment ,  note)
# grouped boxplot
ggplot(data, aes(x=variety, y=note, fill=treatment)) +
geom_boxplot()
View(data)
View(data)
runApp('app')
runApp('app')
library(ggplot2)
# create a data frame
variety=rep(LETTERS[1:7], each=40)
treatment=rep(c("high","low"),each=20)
note=seq(1:280)+sample(1:150, 280, replace=T)
data=data.frame(variety, treatment ,  note)
# grouped boxplot
ggplot(data, aes(x=variety, y=note, fill=treatment)) +
geom_boxplot()
runApp('app')
runApp('app')
runApp('app')
ncol(data)
contrasts(data$variety)<-contr.helmert(3)
df_new <- data.frame(data$variety)
xx = data$variety
class(xx)
xx
dose<- factor(xx, levels = c(1:7), lables("A","B","C","D","E","F","G"))
dose<- factor(xx, levels = c(1:7), labels("A","B","C","D","E","F","G"))
Gruppe=c(rep(input$group1, times=length(xg1)),
rep(input$group2, times=length(xg2)))
Gruppe=c(rep("X", times=4,
rep("A", times=8))
)
Gruppe=c(rep("X", times=4),
rep("A", times=8))
class(Gruppe)
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
xg1 = c(1,2,3,4,5,6)
xg2 = c(1,2,3,4,5,6,7)
group1 = "Grupp1"
group2 = "Grupp2"
groupfac=c(rep(input$group1, times=length(xg1)),
rep(input$group2, times=length(xg2)))
groupfac=c(rep(group1, times=length(xg1)),
rep(group2, times=length(xg2)))
groupfac
groupfac<-factor(groupfac,levels = c(1:2), labels= c(group1, group2))
groupfac
groupfac<-factor(groupfac,levels = c(1:2), labels= c("Grupp1","Grupp2"))
groupfac
groupfac
groupfac=c(rep(group1, times=length(xg1)),
rep(group2, times=length(xg2)))
group=c(rep(group1, times=length(xg1)),
rep(group2, times=length(xg2)))
groupfac<-factor(groupfac,levels = c(1:2), labels= c("Grupp1","Grupp2"))
groupfac
groupfac<-factor(groupfac,levels = c(1,2), labels= c("Grupp1","Grupp2"))
groupfac
groupfac<-factor(group,levels = c(1,2), labels= c("Grupp1","Grupp2"))
groupfac
libido<-c(3,2,5,2,2,2,7,2,4,7,5,3,4,4,7,5,4,9,2,6,3,4,4,4,6,4,6,2,8,5)
partnerLibido<-c(4,1,5,1,2,2,7,4,5,5,3,1,2,2,6,4,2,1,3,5,4,3,3,2,0,1,3,0,1,0)
dose<-c(rep(1,9),rep(2,8), rep(3,13))
dose<-factor(dose, levels = c(1:3), labels = c("Placebo", "Low Dose", "High Dose"))
viagraData<-data.frame(dose, libido, partnerLibido)
dose
dose<-c(rep(1,9),rep(2,8), rep(3,13))
dose<-factor(dose, levels = c(1:3), labels = c("Placebo", "Low Dose", "High Dose"))
group=c(rep(group1, times=length(xg1)),
rep(group2, times=length(xg2)))
groupfac<-factor(group,levels = c(group1,group2), labels= c("GruppXXX1","GruppXXX2"))
groupfac
runApp('app')
runApp('app')
runApp('app')
runApp('app')
adjustedMeans<-effect("dose", viagraModel, se=TRUE)
summary(adjustedMeans)
contrasts(viagraData$dose)<-cbind(c(-2,1,1), c(0,-1,1))
viagraModel<-aov(libido~ partnerLibido + dose, data = viagraData)
Anova(viagraModel, type="III")
adjustedMeans<-effect("dose", viagraModel, se=TRUE)
summary(adjustedMeans)
adjustedMeans$se
runApp('app')
runApp('app')
runApp('app')
contrasts(viagraData$dose)<-cbind(c(-2,1,1), c(0,-1,1))
viagraModel<-aov(libido~ partnerLibido + dose, data = viagraData)
Anova(viagraModel, type="III")
adjustedMeans<-effect("dose", viagraModel, se=TRUE)
summary(adjustedMeans)
adjustedMeans$se
View(adjustedMeans)
View(adjustedMeans)
adjustedMeans$fit
g1 <- ggplot(mtcars, aes(factor(am), mpg)) + geom_boxplot() +
ggtitle("Regular Boxplot")
x
x = c(1,2,3,4)
mean(x)
std(x)
stderr(x)
stder(x)
sd(x)
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
df <- data.frame(Gruppe = c("G1", paste0("adj","G1"), "G2", paste0("adj_","G2")),
mymean = c(1, 2, 3,4),
sd = c(0.2, 0.4, 0.6, 0.8))
ggplot(df, aes(x=Gruppe, y=mymean)) +
geom_errorbar(aes(ymin=mymean-sd, ymax=mymean+sd), width=.2) +
geom_line() +
geom_point()
df$Gruppe <- as.character(df$Gruppe)
df$Gruppe <- factor(df$Gruppe, levels=c("G1", paste0("adj","G1"), "G2", paste0("adj_","G2")))
ggplot(df, aes(x=Gruppe, y=mymean)) +
geom_errorbar(aes(ymin=mymean-sd, ymax=mymean+sd), width=.2) +
geom_line() +
geom_point()
runApp('app')
getwd()
y = (1,2,3,4,5,54,3,3,2)
y = c(1,2,3,4,5,54,3,3,2)
z = t.test(x,y)
z
z.p
View(z)
View(z)
z$p.value
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
View(regressionStatsUI)
regressionStatsUI <- function(id){
ns <- NS(id)
# Thanks to the namespacing, we only need to make sure that the IDs
# are unique within this function, rather than unique across the entire app.
tagList(
uiOutput(ns("uiANOVA")),
#verbatimTextOutput(ns("textANOVAStats")),
absolutePanel(
bottom = 20, right = 20, width = 200,
draggable = TRUE,
wellPanel(
htmlOutput(ns("html_text")),
sliderInput("n", "", min=3, max=20, value=5),
plotOutput("plot2", height="200px")
),
style = "opacity: 0.92"
),
)
}
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
libido<-c(3,2,5,2,2,2,7,2,4,7,5,3,4,4,7,5,4,9,2,6,3,4,4,4,6,4,6,2,8,5)
partnerLibido<-c(4,1,5,1,2,2,7,4,5,5,3,1,2,2,6,4,2,1,3,5,4,3,3,2,0,1,3,0,1,0)
dose<-c(rep(1,9),rep(2,8), rep(3,13))
dose<-factor(dose, levels = c(1:3), labels = c("Placebo", "Low Dose", "High Dose"))
viagraData<-data.frame(dose, libido, partnerLibido)
#Graphs
restructuredData<-melt(viagraData, id = c("dose"), measured = c("libido", "partnerLibido"))
names(restructuredData)<-c("dose", "libido_type", "libido")
boxplot <- ggplot(restructuredData, aes(dose, libido))
boxplot + geom_boxplot() + facet_wrap(~libido_type) + labs(x = "Dose", y = "Libido")
imageFile <- paste(imageDirectory,"11 Viagra Boxplot.png",sep="/")
ggsave(file = imageFile)
imageFile <- paste("tmp.png")
ggsave(file = imageFile)
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
library(shiny)
runApp('app')
runApp('app')
runApp('app')
getwd)=
getwd()
library(shiny)
runApp('app')
